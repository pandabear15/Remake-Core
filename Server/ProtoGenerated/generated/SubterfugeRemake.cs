// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: subterfuge_remake.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubterfugeRemakeService {

  /// <summary>Holder for reflection information generated from subterfuge_remake.proto</summary>
  public static partial class SubterfugeRemakeReflection {

    #region Descriptor
    /// <summary>File descriptor for subterfuge_remake.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SubterfugeRemakeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdzdWJ0ZXJmdWdlX3JlbWFrZS5wcm90bxIXU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UiMwoOUmVzcG9uc2VTdGF0dXMSEQoJaXNTdWNjZXNzGAIgASgIEg4K",
            "BmRldGFpbBgDIAEoCSI6ChRBdXRob3JpemF0aW9uUmVxdWVzdBIQCghVc2Vy",
            "bmFtZRgBIAEoCRIQCghQYXNzd29yZBgCIAEoCSInChZBdXRob3JpemVkVG9r",
            "ZW5SZXF1ZXN0Eg0KBVRva2VuGAEgASgJIowBChVBdXRob3JpemF0aW9uUmVz",
            "cG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZp",
            "Y2UuUmVzcG9uc2VTdGF0dXMSKwoEVXNlchgCIAEoCzIdLlN1YnRlcmZ1Z2VS",
            "ZW1ha2VTZXJ2aWNlLlVzZXISDQoFVG9rZW4YAyABKAkiaQoaQWNjb3VudFJl",
            "Z2lzdHJhdGlvblJlcXVlc3QSEAoIVXNlcm5hbWUYASABKAkSEAoIUGFzc3dv",
            "cmQYAiABKAkSDQoFRW1haWwYAyABKAkSGAoQRGV2aWNlSWRlbnRpZmllchgE",
            "IAEoCSKSAQobQWNjb3VudFJlZ2lzdHJhdGlvblJlc3BvbnNlEjcKBnN0YXR1",
            "cxgBIAEoCzInLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJlc3BvbnNlU3Rh",
            "dHVzEisKBFVzZXIYAiABKAsyHS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5V",
            "c2VyEg0KBVRva2VuGAMgASgJIiQKBFVzZXISCgoCSWQYASABKAkSEAoIVXNl",
            "cm5hbWUYAiABKAkiZQoST3BlbkxvYmJpZXNSZXF1ZXN0EjcKClJvb21TdGF0",
            "dXMYASABKA4yIy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5Sb29tU3RhdHVz",
            "EhYKDkZpbHRlckJ5UGxheWVyGAIgASgIInwKE09wZW5Mb2JiaWVzUmVzcG9u",
            "c2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2Uu",
            "UmVzcG9uc2VTdGF0dXMSLAoFUm9vbXMYAiADKAsyHS5TdWJ0ZXJmdWdlUmVt",
            "YWtlU2VydmljZS5Sb29tItADCgRSb29tEg4KBlJvb21JZBgBIAEoCRI3CgpS",
            "b29tU3RhdHVzGAIgASgOMiMuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuUm9v",
            "bVN0YXR1cxIuCgdDcmVhdG9yGAMgASgLMh0uU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UuVXNlchJFChFSYW5rZWRJbmZvcm1hdGlvbhgEIAEoCzIqLlN1YnRl",
            "cmZ1Z2VSZW1ha2VTZXJ2aWNlLlJhbmtlZEluZm9ybWF0aW9uEhEKCUFub255",
            "bW91cxgFIAEoCBIQCghSb29tTmFtZRgGIAEoCRIrCgRHb2FsGAcgASgOMh0u",
            "U3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR29hbBIMCgRTZWVkGAggASgFEhcK",
            "D1VuaXhUaW1lQ3JlYXRlZBgJIAEoAxIXCg9Vbml4VGltZVN0YXJ0ZWQYCiAB",
            "KAMSEgoKTWF4UGxheWVycxgLIAEoAxIuCgdQbGF5ZXJzGAwgAygLMh0uU3Vi",
            "dGVyZnVnZVJlbWFrZVNlcnZpY2UuVXNlchIaChJhbGxvd2VkU3BlY2lhbGlz",
            "dHMYDSADKAkSFgoOTWludXRlc1BlclRpY2sYDiABKAEiSwoRUmFua2VkSW5m",
            "b3JtYXRpb24SEAoISXNSYW5rZWQYASABKAgSEQoJTWluUmF0aW5nGAIgASgD",
            "EhEKCU1heFJhdGluZxgDIAEoAyK/AQoRQ3JlYXRlUm9vbVJlcXVlc3QSEAoI",
            "aXNSYW5rZWQYBCABKAgSEQoJQW5vbnltb3VzGAUgASgIEhAKCFJvb21OYW1l",
            "GAYgASgJEisKBEdvYWwYByABKA4yHS5TdWJ0ZXJmdWdlUmVtYWtlU2Vydmlj",
            "ZS5Hb2FsEhIKCk1heFBsYXllcnMYCyABKAMSGgoSYWxsb3dlZFNwZWNpYWxp",
            "c3RzGAwgAygJEhYKDk1pbnV0ZXNQZXJUaWNrGA0gASgBIoEBChJDcmVhdGVS",
            "b29tUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFr",
            "ZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSMgoLY3JlYXRlZFJvb20YAiABKAsy",
            "HS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5Sb29tIiEKD0pvaW5Sb29tUmVx",
            "dWVzdBIOCgZSb29tSWQYASABKAkiSwoQSm9pblJvb21SZXNwb25zZRI3CgZz",
            "dGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5SZXNwb25z",
            "ZVN0YXR1cyIiChBMZWF2ZVJvb21SZXF1ZXN0Eg4KBlJvb21JZBgBIAEoCSJM",
            "ChFMZWF2ZVJvb21SZXNwb25zZRI3CgZzdGF0dXMYASABKAsyJy5TdWJ0ZXJm",
            "dWdlUmVtYWtlU2VydmljZS5SZXNwb25zZVN0YXR1cyInChVTdGFydEdhbWVF",
            "YXJseVJlcXVlc3QSDgoGUm9vbUlkGAEgASgJIlEKFlN0YXJ0R2FtZUVhcmx5",
            "UmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UuUmVzcG9uc2VTdGF0dXMiPQoYR2V0R2FtZVJvb21FdmVudHNSZXF1",
            "ZXN0Eg4KBlJvb21JZBgBIAEoCRIRCglBZnRlclRpY2sYAiABKAMikQEKGUdl",
            "dEdhbWVSb29tRXZlbnRzUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3Vi",
            "dGVyZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSOwoKR2FtZUV2",
            "ZW50cxgCIAMoCzInLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkdhbWVFdmVu",
            "dE1vZGVsInIKEEdhbWVFdmVudFJlcXVlc3QSNQoJZXZlbnRUeXBlGAEgASgO",
            "MiIuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuRXZlbnRUeXBlEhQKDE9jY3Vy",
            "c0F0VGljaxgDIAEoBRIRCglFdmVudERhdGEYBSABKAwiZgoWU3VibWl0R2Ft",
            "ZUV2ZW50UmVxdWVzdBIOCgZSb29tSWQYASABKAkSPAoJRXZlbnREYXRhGAIg",
            "ASgLMikuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2FtZUV2ZW50UmVxdWVz",
            "dCJjChdTdWJtaXRHYW1lRXZlbnRSZXNwb25zZRI3CgZzdGF0dXMYASABKAsy",
            "Jy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5SZXNwb25zZVN0YXR1cxIPCgdF",
            "dmVudElkGAMgASgJIncKFlVwZGF0ZUdhbWVFdmVudFJlcXVlc3QSDgoGUm9v",
            "bUlkGAEgASgJEg8KB2V2ZW50SWQYAiABKAkSPAoJRXZlbnREYXRhGAMgASgL",
            "MikuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2FtZUV2ZW50UmVxdWVzdCI5",
            "ChZEZWxldGVHYW1lRXZlbnRSZXF1ZXN0Eg4KBlJvb21JZBgBIAEoCRIPCgdF",
            "dmVudElkGAIgASgJIlIKF0RlbGV0ZUdhbWVFdmVudFJlc3BvbnNlEjcKBnN0",
            "YXR1cxgBIAEoCzInLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJlc3BvbnNl",
            "U3RhdHVzIkMKGUNyZWF0ZU1lc3NhZ2VHcm91cFJlcXVlc3QSDgoGUm9vbUlk",
            "GAEgASgJEhYKDlVzZXJJZHNJbkdyb3VwGAIgAygJImYKGkNyZWF0ZU1lc3Nh",
            "Z2VHcm91cFJlc3BvbnNlEjcKBnN0YXR1cxgBIAEoCzInLlN1YnRlcmZ1Z2VS",
            "ZW1ha2VTZXJ2aWNlLlJlc3BvbnNlU3RhdHVzEg8KB0dyb3VwSWQYAiABKAki",
            "RgoSU2VuZE1lc3NhZ2VSZXF1ZXN0Eg4KBlJvb21JZBgBIAEoCRIPCgdHcm91",
            "cElkGAIgASgJEg8KB01lc3NhZ2UYAyABKAkiTgoTU2VuZE1lc3NhZ2VSZXNw",
            "b25zZRI3CgZzdGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2Vydmlj",
            "ZS5SZXNwb25zZVN0YXR1cyIpChdHZXRNZXNzYWdlR3JvdXBzUmVxdWVzdBIO",
            "CgZSb29tSWQYASABKAkikQEKGEdldE1lc3NhZ2VHcm91cHNSZXNwb25zZRI3",
            "CgZzdGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5SZXNw",
            "b25zZVN0YXR1cxI8Cg1NZXNzYWdlR3JvdXBzGAIgAygLMiUuU3VidGVyZnVn",
            "ZVJlbWFrZVNlcnZpY2UuTWVzc2FnZUdyb3VwIo0BCgxNZXNzYWdlR3JvdXAS",
            "DwoHR3JvdXBJZBgBIAEoCRIzCgxHcm91cE1lbWJlcnMYAiADKAsyHS5TdWJ0",
            "ZXJmdWdlUmVtYWtlU2VydmljZS5Vc2VyEjcKCE1lc3NhZ2VzGAMgAygLMiUu",
            "U3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuTWVzc2FnZU1vZGVsIisKEkJsb2Nr",
            "UGxheWVyUmVxdWVzdBIVCg1Vc2VySWRUb0Jsb2NrGAEgASgJIk4KE0Jsb2Nr",
            "UGxheWVyUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMiLQoUVW5ibG9ja1BsYXllclJl",
            "cXVlc3QSFQoNVXNlcklkVG9CbG9jaxgBIAEoCSJQChVVbmJsb2NrUGxheWVy",
            "UmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UuUmVzcG9uc2VTdGF0dXMiGwoZVmlld0Jsb2NrZWRQbGF5ZXJzUmVx",
            "dWVzdCKKAQoaVmlld0Jsb2NrZWRQbGF5ZXJzUmVzcG9uc2USNwoGc3RhdHVz",
            "GAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0",
            "dXMSMwoMQmxvY2tlZFVzZXJzGAIgAygLMh0uU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UuVXNlciIsChhTZW5kRnJpZW5kUmVxdWVzdFJlcXVlc3QSEAoIRnJp",
            "ZW5kSWQYASABKAkiVAoZU2VuZEZyaWVuZFJlcXVlc3RSZXNwb25zZRI3CgZz",
            "dGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5SZXNwb25z",
            "ZVN0YXR1cyIuChpBY2NlcHRGcmllbmRSZXF1ZXN0UmVxdWVzdBIQCghGcmll",
            "bmRJZBgBIAEoCSJWChtBY2NlcHRGcmllbmRSZXF1ZXN0UmVzcG9uc2USNwoG",
            "c3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9u",
            "c2VTdGF0dXMiLAoYRGVueUZyaWVuZFJlcXVlc3RSZXF1ZXN0EhAKCEZyaWVu",
            "ZElkGAEgASgJIlQKGURlbnlGcmllbmRSZXF1ZXN0UmVzcG9uc2USNwoGc3Rh",
            "dHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VT",
            "dGF0dXMiGwoZVmlld0ZyaWVuZFJlcXVlc3RzUmVxdWVzdCKNAQoaVmlld0Zy",
            "aWVuZFJlcXVlc3RzUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVy",
            "ZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSNgoPSW5jb21pbmdG",
            "cmllbmRzGAIgAygLMh0uU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuVXNlciIn",
            "ChNSZW1vdmVGcmllbmRSZXF1ZXN0EhAKCEZyaWVuZElkGAEgASgJIk8KFFJl",
            "bW92ZUZyaWVuZFJlc3BvbnNlEjcKBnN0YXR1cxgBIAEoCzInLlN1YnRlcmZ1",
            "Z2VSZW1ha2VTZXJ2aWNlLlJlc3BvbnNlU3RhdHVzIhQKElZpZXdGcmllbmRz",
            "UmVxdWVzdCJ+ChNWaWV3RnJpZW5kc1Jlc3BvbnNlEjcKBnN0YXR1cxgBIAEo",
            "CzInLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJlc3BvbnNlU3RhdHVzEi4K",
            "B0ZyaWVuZHMYAiADKAsyHS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5Vc2Vy",
            "IhQKEkhlYWx0aENoZWNrUmVxdWVzdCJOChNIZWFsdGhDaGVja1Jlc3BvbnNl",
            "EjcKBnN0YXR1cxgBIAEoCzInLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJl",
            "c3BvbnNlU3RhdHVzIh4KHEF1dGhvcml6ZWRIZWFsdGhDaGVja1JlcXVlc3Qi",
            "WAodQXV0aG9yaXplZEhlYWx0aENoZWNrUmVzcG9uc2USNwoGc3RhdHVzGAEg",
            "ASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMi",
            "GwoZUGxheWVyQ3VycmVudEdhbWVzUmVxdWVzdCKDAQoaUGxheWVyQ3VycmVu",
            "dEdhbWVzUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSLAoFZ2FtZXMYAiADKAsyHS5T",
            "dWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5Sb29tIk4KF0dldEdyb3VwTWVzc2Fn",
            "ZXNSZXF1ZXN0Eg4KBnJvb21JZBgBIAEoCRIPCgdncm91cElkGAIgASgJEhIK",
            "CnBhZ2luYXRpb24YAyABKAUiiQEKGEdldEdyb3VwTWVzc2FnZXNSZXNwb25z",
            "ZRI3CgZzdGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5S",
            "ZXNwb25zZVN0YXR1cxI0CgVncm91cBgCIAEoCzIlLlN1YnRlcmZ1Z2VSZW1h",
            "a2VTZXJ2aWNlLk1lc3NhZ2VHcm91cCJoCh1TdWJtaXRDdXN0b21TcGVjaWFs",
            "aXN0UmVxdWVzdBJHCg1Db25maWd1cmF0aW9uGAEgASgLMjAuU3VidGVyZnVn",
            "ZVJlbWFrZVNlcnZpY2UuU3BlY2lhbGlzdENvbmZpZ3VyYXRpb24ifAoeU3Vi",
            "bWl0Q3VzdG9tU3BlY2lhbGlzdFJlc3BvbnNlEjcKBnN0YXR1cxgBIAEoCzIn",
            "LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJlc3BvbnNlU3RhdHVzEiEKGVNw",
            "ZWNpYWxpc3RDb25maWd1cmF0aW9uSWQYAiABKAkiRQobR2V0Q3VzdG9tU3Bl",
            "Y2lhbGlzdHNSZXF1ZXN0EhIKCnBhZ2VOdW1iZXIYASABKAMSEgoKc2VhcmNo",
            "VGVybRgCIAEoCSKkAQocR2V0Q3VzdG9tU3BlY2lhbGlzdHNSZXNwb25zZRI3",
            "CgZzdGF0dXMYASABKAsyJy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5SZXNw",
            "b25zZVN0YXR1cxJLChFDdXN0b21TcGVjaWFsaXN0cxgCIAMoCzIwLlN1YnRl",
            "cmZ1Z2VSZW1ha2VTZXJ2aWNlLlNwZWNpYWxpc3RDb25maWd1cmF0aW9uImcK",
            "HkNyZWF0ZVNwZWNpYWxpc3RQYWNrYWdlUmVxdWVzdBJFChFTcGVjaWFsaXN0",
            "UGFja2FnZRgBIAEoCzIqLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlNwZWNp",
            "YWxpc3RQYWNrYWdlIncKH0NyZWF0ZVNwZWNpYWxpc3RQYWNrYWdlUmVzcG9u",
            "c2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2Uu",
            "UmVzcG9uc2VTdGF0dXMSGwoTU3BlY2lhbGlzdFBhY2thZ2VJZBgCIAEoCSJG",
            "ChxHZXRTcGVjaWFsaXN0UGFja2FnZXNSZXF1ZXN0EhIKCnBhZ2VOdW1iZXIY",
            "ASABKAMSEgoKc2VhcmNoVGVybRgCIAEoCSKgAQodR2V0U3BlY2lhbGlzdFBh",
            "Y2thZ2VzUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSRgoSU3BlY2lhbGlzdFBhY2th",
            "Z2VzGAIgAygLMiouU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuU3BlY2lhbGlz",
            "dFBhY2thZ2UiNQohR2V0UGxheWVyQ3VzdG9tU3BlY2lhbGlzdHNSZXF1ZXN0",
            "EhAKCHBsYXllcklkGAEgASgJIqoBCiJHZXRQbGF5ZXJDdXN0b21TcGVjaWFs",
            "aXN0c1Jlc3BvbnNlEjcKBnN0YXR1cxgBIAEoCzInLlN1YnRlcmZ1Z2VSZW1h",
            "a2VTZXJ2aWNlLlJlc3BvbnNlU3RhdHVzEksKEVBsYXllclNwZWNpYWxpc3Rz",
            "GAIgAygLMjAuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuU3BlY2lhbGlzdENv",
            "bmZpZ3VyYXRpb24iNgoiR2V0UGxheWVyU3BlY2lhbGlzdFBhY2thZ2VzUmVx",
            "dWVzdBIQCghwbGF5ZXJJZBgBIAEoCSKiAQojR2V0UGxheWVyU3BlY2lhbGlz",
            "dFBhY2thZ2VzUmVzcG9uc2USNwoGc3RhdHVzGAEgASgLMicuU3VidGVyZnVn",
            "ZVJlbWFrZVNlcnZpY2UuUmVzcG9uc2VTdGF0dXMSQgoOUGxheWVyUGFja2Fn",
            "ZXMYAiADKAsyKi5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5TcGVjaWFsaXN0",
            "UGFja2FnZSLXAQoJVXNlck1vZGVsEgoKAklkGAEgASgJEhAKCFVzZXJuYW1l",
            "GAIgASgJEhQKDFBhc3N3b3JkSGFzaBgDIAEoCRINCgVFbWFpbBgEIAEoCRIY",
            "ChBkZXZpY2VJZGVudGlmaWVyGAUgASgJEhUKDWVtYWlsVmVyaWZpZWQYBiAB",
            "KAgSMgoGY2xhaW1zGAcgAygOMiIuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2Uu",
            "VXNlckNsYWltEiIKGnB1c2hOb3RpZmljYXRpb25JZGVudGlmaWVyGAggASgJ",
            "IogDCglSb29tTW9kZWwSDgoGUm9vbUlkGAEgASgJEjcKClJvb21TdGF0dXMY",
            "AiABKA4yIy5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5Sb29tU3RhdHVzEhEK",
            "CWNyZWF0b3JJZBgDIAEoCRJFChFSYW5rZWRJbmZvcm1hdGlvbhgEIAEoCzIq",
            "LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlJhbmtlZEluZm9ybWF0aW9uEhEK",
            "CUFub255bW91cxgFIAEoCBIQCghSb29tTmFtZRgGIAEoCRIrCgRHb2FsGAcg",
            "ASgOMh0uU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR29hbBIMCgRTZWVkGAgg",
            "ASgFEhcKD1VuaXhUaW1lQ3JlYXRlZBgJIAEoAxIXCg9Vbml4VGltZVN0YXJ0",
            "ZWQYCiABKAMSEgoKTWF4UGxheWVycxgLIAEoAxIaChJhbGxvd2VkU3BlY2lh",
            "bGlzdHMYDCADKAkSFgoOTWludXRlc1BlclRpY2sYDSABKAEiqwEKDkdhbWVF",
            "dmVudE1vZGVsEg8KB2V2ZW50SWQYASABKAkSFgoOVW5peFRpbWVJc3N1ZWQY",
            "AiABKAMSFAoMT2NjdXJzQXRUaWNrGAMgASgFEhAKCElzc3VlZEJ5GAQgASgJ",
            "EhEKCUV2ZW50RGF0YRgFIAEoDBI1CglldmVudFR5cGUYBiABKA4yIi5TdWJ0",
            "ZXJmdWdlUmVtYWtlU2VydmljZS5FdmVudFR5cGUiUgoKR3JvdXBNb2RlbBIP",
            "CgdHcm91cElkGAEgASgJEjMKDEdyb3VwTWVtYmVycxgCIAMoCzIdLlN1YnRl",
            "cmZ1Z2VSZW1ha2VTZXJ2aWNlLlVzZXIiTAoMTWVzc2FnZU1vZGVsEhkKEVVu",
            "aXhUaW1lQ3JlYXRlZEF0GAEgASgDEhAKCFNlbmRlcklkGAIgASgJEg8KB01l",
            "c3NhZ2UYAyABKAki3AEKF1NwZWNpYWxpc3RDb25maWd1cmF0aW9uEhQKDFNw",
            "ZWNpYWxpc3RJZBgBIAEoCRIQCghQcmlvcml0eRgCIAEoAxIWCg5TcGVjaWFs",
            "aXN0TmFtZRgDIAEoCRIuCgdDcmVhdG9yGAQgASgLMh0uU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuVXNlchJRChFzcGVjaWFsaXN0RWZmZWN0cxgFIAMoCzI2",
            "LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlNwZWNpYWxpc3RFZmZlY3RDb25m",
            "aWd1cmF0aW9uIvkCCh1TcGVjaWFsaXN0RWZmZWN0Q29uZmlndXJhdGlvbhIN",
            "CgVWYWx1ZRgBIAEoAxI9Cg1FZmZlY3RUcmlnZ2VyGAIgASgOMiYuU3VidGVy",
            "ZnVnZVJlbWFrZVNlcnZpY2UuRWZmZWN0VHJpZ2dlchI7CgxFZmZlY3RUYXJn",
            "ZXQYAyABKA4yJS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5FZmZlY3RUYXJn",
            "ZXQSRwoSRWZmZWN0VHJpZ2dlclJhbmdlGAQgASgOMisuU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuRWZmZWN0VHJpZ2dlclJhbmdlEj8KDkVmZmVjdE1vZGlm",
            "aWVyGAUgASgOMicuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuRWZmZWN0TW9k",
            "aWZpZXISQwoLRWZmZWN0U2NhbGUYBiABKAsyLi5TdWJ0ZXJmdWdlUmVtYWtl",
            "U2VydmljZS5TcGVjaWFsaXN0RWZmZWN0U2NhbGUi3AEKFVNwZWNpYWxpc3RF",
            "ZmZlY3RTY2FsZRI5CgtFZmZlY3RTY2FsZRgGIAEoDjIkLlN1YnRlcmZ1Z2VS",
            "ZW1ha2VTZXJ2aWNlLkVmZmVjdFNjYWxlEkAKEUVmZmVjdFNjYWxlVGFyZ2V0",
            "GAcgASgOMiUuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuRWZmZWN0VGFyZ2V0",
            "EkYKEVNjYWxlVHJpZ2dlclJhbmdlGAggASgOMisuU3VidGVyZnVnZVJlbWFr",
            "ZVNlcnZpY2UuRWZmZWN0VHJpZ2dlclJhbmdlIqoBChFTcGVjaWFsaXN0UGFj",
            "a2FnZRIuCgdDcmVhdG9yGAEgASgLMh0uU3VidGVyZnVnZVJlbWFrZVNlcnZp",
            "Y2UuVXNlchITCgtQYWNrYWdlTmFtZRgCIAEoCRIbChNTcGVjaWFsaXN0UGFj",
            "a2FnZUlkGAMgASgJEhUKDXNwZWNpYWxpc3RJZHMYBCADKAkSHAoUU3BlY2lh",
            "bGlzdFBhY2thZ2VJZHMYBSADKAkidAoeU3BlY2lhbGlzdFBhY2thZ2VDb25m",
            "aWd1cmF0aW9uElIKGFNwZWNpYWxpc3RDb25maWd1cmF0aW9ucxgCIAMoCzIw",
            "LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlNwZWNpYWxpc3RDb25maWd1cmF0",
            "aW9uKi8KClJvb21TdGF0dXMSCAoET1BFThAAEgsKB09OR09JTkcQARIKCgZD",
            "TE9TRUQQAioiCgRHb2FsEgoKBk1JTklORxAAEg4KCkRPTUlOQVRJT04QASpW",
            "CglVc2VyQ2xhaW0SCwoHVU5LTk9XThAAEggKBFVTRVIQARIHCgNERVYQAhIJ",
            "CgVBRE1JThADEhIKDkVNQUlMX1ZFUklGSUVEEAQSCgoGQkFOTkVEEAUqSQoJ",
            "RXZlbnRUeXBlEhEKDVVOS05PV05fRVZFTlQQABIQCgxMQVVOQ0hfRVZFTlQQ",
            "ARIXChNUT0dHTEVfU0hJRUxEX0VWRU5UEAIqywEKDUVmZmVjdFRyaWdnZXIS",
            "DQoJTm9UcmlnZ2VyEAASCAoESGlyZRABEgsKB1Byb21vdGUQAhINCglTdWJM",
            "YXVuY2gQAxINCglTdWJBcnJpdmUQBBIRCg1PdXRwb3N0Q29tYmF0EAUSDQoJ",
            "U3ViQ29tYmF0EAYSDgoKQ29tYmF0TG9zcxAHEhEKDUNvbWJhdFZpY3RvcnkQ",
            "CBISCg5GYWN0b3J5UHJvZHVjZRAJEg8KC01pbmVQcm9kdWNlEAoSDAoIU3Vi",
            "RW50ZXIQCypaCgxFZmZlY3RUYXJnZXQSDAoITm9UYXJnZXQQABIMCghGaXJl",
            "bmRseRABEgkKBUVuZW15EAISGgoWQm90aENvbWJhdFBhcnRpY2lwYW50cxAD",
            "EgcKA0FsbBAEKngKEkVmZmVjdFRyaWdnZXJSYW5nZRIICgRTZWxmEAASCQoF",
            "TG9jYWwQARIRCg1Db25zdGFudFJhbmdlEAISFwoTTG9jYXRpb25WaXNpb25S",
            "YW5nZRADEhUKEVBsYXllclZpc2lvblJhbmdlEAQSCgoGR2xvYmFsEAUqzgEK",
            "DkVmZmVjdE1vZGlmaWVyEgsKB0RyaWxsZXIQABIWChJTcGVjaWFsaXN0Q2Fw",
            "YWNpdHkQARIPCgtTaGllbGRWYWx1ZRACEhYKElNoaWVsZFJlZ2VuZXJhdGlv",
            "bhADEhIKDlNoaWVsZE1heFZhbHVlEAQSCgoGVmlzaW9uEAUSCQoFU3BlZWQQ",
            "BhIOCgpLaWxsUGxheWVyEAcSEQoNVmljdG9yeVBsYXllchAIEhIKDktpbGxT",
            "cGVjaWFsaXN0EAkSDAoITm9FZmZlY3QQCiqlAQoLRWZmZWN0U2NhbGUSCwoH",
            "Tm9TY2FsZRAAEhEKDUNvbnN0YW50VmFsdWUQARIWChJQbGF5ZXJPdXRwb3N0",
            "Q291bnQQAhITCg9QbGF5ZXJNaW5lQ291bnQQAxIWChJQbGF5ZXJGYWN0b3J5",
            "Q291bnQQBBIWChJQbGF5ZXJEcmlsbGVyQ291bnQQBRIZChVQbGF5ZXJTcGVj",
            "aWFsaXN0Q291bnQQBjL1IAoRc3VidGVyZnVnZVNlcnZpY2USaAoFTG9naW4S",
            "LS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5BdXRob3JpemF0aW9uUmVxdWVz",
            "dBouLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkF1dGhvcml6YXRpb25SZXNw",
            "b25zZSIAEnMKDkxvZ2luV2l0aFRva2VuEi8uU3VidGVyZnVnZVJlbWFrZVNl",
            "cnZpY2UuQXV0aG9yaXplZFRva2VuUmVxdWVzdBouLlN1YnRlcmZ1Z2VSZW1h",
            "a2VTZXJ2aWNlLkF1dGhvcml6YXRpb25SZXNwb25zZSIAEn4KD1JlZ2lzdGVy",
            "QWNjb3VudBIzLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkFjY291bnRSZWdp",
            "c3RyYXRpb25SZXF1ZXN0GjQuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQWNj",
            "b3VudFJlZ2lzdHJhdGlvblJlc3BvbnNlIgASbQoOR2V0T3BlbkxvYmJpZXMS",
            "Ky5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5PcGVuTG9iYmllc1JlcXVlc3Qa",
            "LC5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5PcGVuTG9iYmllc1Jlc3BvbnNl",
            "IgASggEKFUdldFBsYXllckN1cnJlbnRHYW1lcxIyLlN1YnRlcmZ1Z2VSZW1h",
            "a2VTZXJ2aWNlLlBsYXllckN1cnJlbnRHYW1lc1JlcXVlc3QaMy5TdWJ0ZXJm",
            "dWdlUmVtYWtlU2VydmljZS5QbGF5ZXJDdXJyZW50R2FtZXNSZXNwb25zZSIA",
            "EmoKDUNyZWF0ZU5ld1Jvb20SKi5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5D",
            "cmVhdGVSb29tUmVxdWVzdBorLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkNy",
            "ZWF0ZVJvb21SZXNwb25zZSIAEmEKCEpvaW5Sb29tEiguU3VidGVyZnVnZVJl",
            "bWFrZVNlcnZpY2UuSm9pblJvb21SZXF1ZXN0GikuU3VidGVyZnVnZVJlbWFr",
            "ZVNlcnZpY2UuSm9pblJvb21SZXNwb25zZSIAEmQKCUxlYXZlUm9vbRIpLlN1",
            "YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkxlYXZlUm9vbVJlcXVlc3QaKi5TdWJ0",
            "ZXJmdWdlUmVtYWtlU2VydmljZS5MZWF2ZVJvb21SZXNwb25zZSIAEnMKDlN0",
            "YXJ0R2FtZUVhcmx5Ei4uU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuU3RhcnRH",
            "YW1lRWFybHlSZXF1ZXN0Gi8uU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuU3Rh",
            "cnRHYW1lRWFybHlSZXNwb25zZSIAEnwKEUdldEdhbWVSb29tRXZlbnRzEjEu",
            "U3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2V0R2FtZVJvb21FdmVudHNSZXF1",
            "ZXN0GjIuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2V0R2FtZVJvb21FdmVu",
            "dHNSZXNwb25zZSIAEnYKD1N1Ym1pdEdhbWVFdmVudBIvLlN1YnRlcmZ1Z2VS",
            "ZW1ha2VTZXJ2aWNlLlN1Ym1pdEdhbWVFdmVudFJlcXVlc3QaMC5TdWJ0ZXJm",
            "dWdlUmVtYWtlU2VydmljZS5TdWJtaXRHYW1lRXZlbnRSZXNwb25zZSIAEnYK",
            "D1VwZGF0ZUdhbWVFdmVudBIvLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlVw",
            "ZGF0ZUdhbWVFdmVudFJlcXVlc3QaMC5TdWJ0ZXJmdWdlUmVtYWtlU2Vydmlj",
            "ZS5TdWJtaXRHYW1lRXZlbnRSZXNwb25zZSIAEnYKD0RlbGV0ZUdhbWVFdmVu",
            "dBIvLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkRlbGV0ZUdhbWVFdmVudFJl",
            "cXVlc3QaMC5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5EZWxldGVHYW1lRXZl",
            "bnRSZXNwb25zZSIAEn8KEkNyZWF0ZU1lc3NhZ2VHcm91cBIyLlN1YnRlcmZ1",
            "Z2VSZW1ha2VTZXJ2aWNlLkNyZWF0ZU1lc3NhZ2VHcm91cFJlcXVlc3QaMy5T",
            "dWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5DcmVhdGVNZXNzYWdlR3JvdXBSZXNw",
            "b25zZSIAEmoKC1NlbmRNZXNzYWdlEisuU3VidGVyZnVnZVJlbWFrZVNlcnZp",
            "Y2UuU2VuZE1lc3NhZ2VSZXF1ZXN0GiwuU3VidGVyZnVnZVJlbWFrZVNlcnZp",
            "Y2UuU2VuZE1lc3NhZ2VSZXNwb25zZSIAEnkKEEdldE1lc3NhZ2VHcm91cHMS",
            "MC5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5HZXRNZXNzYWdlR3JvdXBzUmVx",
            "dWVzdBoxLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkdldE1lc3NhZ2VHcm91",
            "cHNSZXNwb25zZSIAEnkKEEdldEdyb3VwTWVzc2FnZXMSMC5TdWJ0ZXJmdWdl",
            "UmVtYWtlU2VydmljZS5HZXRHcm91cE1lc3NhZ2VzUmVxdWVzdBoxLlN1YnRl",
            "cmZ1Z2VSZW1ha2VTZXJ2aWNlLkdldEdyb3VwTWVzc2FnZXNSZXNwb25zZSIA",
            "EmoKC0Jsb2NrUGxheWVyEisuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQmxv",
            "Y2tQbGF5ZXJSZXF1ZXN0GiwuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQmxv",
            "Y2tQbGF5ZXJSZXNwb25zZSIAEnAKDVVuYmxvY2tQbGF5ZXISLS5TdWJ0ZXJm",
            "dWdlUmVtYWtlU2VydmljZS5VbmJsb2NrUGxheWVyUmVxdWVzdBouLlN1YnRl",
            "cmZ1Z2VSZW1ha2VTZXJ2aWNlLlVuYmxvY2tQbGF5ZXJSZXNwb25zZSIAEn8K",
            "ElZpZXdCbG9ja2VkUGxheWVycxIyLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNl",
            "LlZpZXdCbG9ja2VkUGxheWVyc1JlcXVlc3QaMy5TdWJ0ZXJmdWdlUmVtYWtl",
            "U2VydmljZS5WaWV3QmxvY2tlZFBsYXllcnNSZXNwb25zZSIAEnwKEVNlbmRG",
            "cmllbmRSZXF1ZXN0EjEuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuU2VuZEZy",
            "aWVuZFJlcXVlc3RSZXF1ZXN0GjIuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2Uu",
            "U2VuZEZyaWVuZFJlcXVlc3RSZXNwb25zZSIAEoIBChNBY2NlcHRGcmllbmRS",
            "ZXF1ZXN0EjMuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQWNjZXB0RnJpZW5k",
            "UmVxdWVzdFJlcXVlc3QaNC5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5BY2Nl",
            "cHRGcmllbmRSZXF1ZXN0UmVzcG9uc2UiABJ8ChFEZW55RnJpZW5kUmVxdWVz",
            "dBIxLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkRlbnlGcmllbmRSZXF1ZXN0",
            "UmVxdWVzdBoyLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkRlbnlGcmllbmRS",
            "ZXF1ZXN0UmVzcG9uc2UiABJ/ChJWaWV3RnJpZW5kUmVxdWVzdHMSMi5TdWJ0",
            "ZXJmdWdlUmVtYWtlU2VydmljZS5WaWV3RnJpZW5kUmVxdWVzdHNSZXF1ZXN0",
            "GjMuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuVmlld0ZyaWVuZFJlcXVlc3Rz",
            "UmVzcG9uc2UiABJtCgxSZW1vdmVGcmllbmQSLC5TdWJ0ZXJmdWdlUmVtYWtl",
            "U2VydmljZS5SZW1vdmVGcmllbmRSZXF1ZXN0Gi0uU3VidGVyZnVnZVJlbWFr",
            "ZVNlcnZpY2UuUmVtb3ZlRnJpZW5kUmVzcG9uc2UiABJqCgtWaWV3RnJpZW5k",
            "cxIrLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlZpZXdGcmllbmRzUmVxdWVz",
            "dBosLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLlZpZXdGcmllbmRzUmVzcG9u",
            "c2UiABJqCgtIZWFsdGhDaGVjaxIrLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNl",
            "LkhlYWx0aENoZWNrUmVxdWVzdBosLlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNl",
            "LkhlYWx0aENoZWNrUmVzcG9uc2UiABKIAQoVQXV0aG9yaXplZEhlYWx0aENo",
            "ZWNrEjUuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQXV0aG9yaXplZEhlYWx0",
            "aENoZWNrUmVxdWVzdBo2LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkF1dGhv",
            "cml6ZWRIZWFsdGhDaGVja1Jlc3BvbnNlIgASiwEKFlN1Ym1pdEN1c3RvbVNw",
            "ZWNpYWxpc3QSNi5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5TdWJtaXRDdXN0",
            "b21TcGVjaWFsaXN0UmVxdWVzdBo3LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNl",
            "LlN1Ym1pdEN1c3RvbVNwZWNpYWxpc3RSZXNwb25zZSIAEoUBChRHZXRDdXN0",
            "b21TcGVjaWFsaXN0cxI0LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2aWNlLkdldEN1",
            "c3RvbVNwZWNpYWxpc3RzUmVxdWVzdBo1LlN1YnRlcmZ1Z2VSZW1ha2VTZXJ2",
            "aWNlLkdldEN1c3RvbVNwZWNpYWxpc3RzUmVzcG9uc2UiABKXAQoaR2V0UGxh",
            "eWVyQ3VzdG9tU3BlY2lhbGlzdHMSOi5TdWJ0ZXJmdWdlUmVtYWtlU2Vydmlj",
            "ZS5HZXRQbGF5ZXJDdXN0b21TcGVjaWFsaXN0c1JlcXVlc3QaOy5TdWJ0ZXJm",
            "dWdlUmVtYWtlU2VydmljZS5HZXRQbGF5ZXJDdXN0b21TcGVjaWFsaXN0c1Jl",
            "c3BvbnNlIgASjgEKF0NyZWF0ZVNwZWNpYWxpc3RQYWNrYWdlEjcuU3VidGVy",
            "ZnVnZVJlbWFrZVNlcnZpY2UuQ3JlYXRlU3BlY2lhbGlzdFBhY2thZ2VSZXF1",
            "ZXN0GjguU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuQ3JlYXRlU3BlY2lhbGlz",
            "dFBhY2thZ2VSZXNwb25zZSIAEogBChVHZXRTcGVjaWFsaXN0UGFja2FnZXMS",
            "NS5TdWJ0ZXJmdWdlUmVtYWtlU2VydmljZS5HZXRTcGVjaWFsaXN0UGFja2Fn",
            "ZXNSZXF1ZXN0GjYuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2V0U3BlY2lh",
            "bGlzdFBhY2thZ2VzUmVzcG9uc2UiABKaAQobR2V0UGxheWVyU3BlY2lhbGlz",
            "dFBhY2thZ2VzEjsuU3VidGVyZnVnZVJlbWFrZVNlcnZpY2UuR2V0UGxheWVy",
            "U3BlY2lhbGlzdFBhY2thZ2VzUmVxdWVzdBo8LlN1YnRlcmZ1Z2VSZW1ha2VT",
            "ZXJ2aWNlLkdldFBsYXllclNwZWNpYWxpc3RQYWNrYWdlc1Jlc3BvbnNlIgBC",
            "Pgodc3VidGVyZnVnZVJlbWFrZS5ncnBjLnNlcnZpY2VCFVN1YnRlcmZ1Z2VS",
            "ZW1ha2VQcm90b1ABogIDU1JQYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SubterfugeRemakeService.RoomStatus), typeof(global::SubterfugeRemakeService.Goal), typeof(global::SubterfugeRemakeService.UserClaim), typeof(global::SubterfugeRemakeService.EventType), typeof(global::SubterfugeRemakeService.EffectTrigger), typeof(global::SubterfugeRemakeService.EffectTarget), typeof(global::SubterfugeRemakeService.EffectTriggerRange), typeof(global::SubterfugeRemakeService.EffectModifier), typeof(global::SubterfugeRemakeService.EffectScale), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ResponseStatus), global::SubterfugeRemakeService.ResponseStatus.Parser, new[]{ "IsSuccess", "Detail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AuthorizationRequest), global::SubterfugeRemakeService.AuthorizationRequest.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AuthorizedTokenRequest), global::SubterfugeRemakeService.AuthorizedTokenRequest.Parser, new[]{ "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AuthorizationResponse), global::SubterfugeRemakeService.AuthorizationResponse.Parser, new[]{ "Status", "User", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AccountRegistrationRequest), global::SubterfugeRemakeService.AccountRegistrationRequest.Parser, new[]{ "Username", "Password", "Email", "DeviceIdentifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AccountRegistrationResponse), global::SubterfugeRemakeService.AccountRegistrationResponse.Parser, new[]{ "Status", "User", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.User), global::SubterfugeRemakeService.User.Parser, new[]{ "Id", "Username" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.OpenLobbiesRequest), global::SubterfugeRemakeService.OpenLobbiesRequest.Parser, new[]{ "RoomStatus", "FilterByPlayer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.OpenLobbiesResponse), global::SubterfugeRemakeService.OpenLobbiesResponse.Parser, new[]{ "Status", "Rooms" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.Room), global::SubterfugeRemakeService.Room.Parser, new[]{ "RoomId", "RoomStatus", "Creator", "RankedInformation", "Anonymous", "RoomName", "Goal", "Seed", "UnixTimeCreated", "UnixTimeStarted", "MaxPlayers", "Players", "AllowedSpecialists", "MinutesPerTick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.RankedInformation), global::SubterfugeRemakeService.RankedInformation.Parser, new[]{ "IsRanked", "MinRating", "MaxRating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateRoomRequest), global::SubterfugeRemakeService.CreateRoomRequest.Parser, new[]{ "IsRanked", "Anonymous", "RoomName", "Goal", "MaxPlayers", "AllowedSpecialists", "MinutesPerTick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateRoomResponse), global::SubterfugeRemakeService.CreateRoomResponse.Parser, new[]{ "Status", "CreatedRoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.JoinRoomRequest), global::SubterfugeRemakeService.JoinRoomRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.JoinRoomResponse), global::SubterfugeRemakeService.JoinRoomResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.LeaveRoomRequest), global::SubterfugeRemakeService.LeaveRoomRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.LeaveRoomResponse), global::SubterfugeRemakeService.LeaveRoomResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.StartGameEarlyRequest), global::SubterfugeRemakeService.StartGameEarlyRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.StartGameEarlyResponse), global::SubterfugeRemakeService.StartGameEarlyResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetGameRoomEventsRequest), global::SubterfugeRemakeService.GetGameRoomEventsRequest.Parser, new[]{ "RoomId", "AfterTick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetGameRoomEventsResponse), global::SubterfugeRemakeService.GetGameRoomEventsResponse.Parser, new[]{ "Status", "GameEvents" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GameEventRequest), global::SubterfugeRemakeService.GameEventRequest.Parser, new[]{ "EventType", "OccursAtTick", "EventData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SubmitGameEventRequest), global::SubterfugeRemakeService.SubmitGameEventRequest.Parser, new[]{ "RoomId", "EventData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SubmitGameEventResponse), global::SubterfugeRemakeService.SubmitGameEventResponse.Parser, new[]{ "Status", "EventId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.UpdateGameEventRequest), global::SubterfugeRemakeService.UpdateGameEventRequest.Parser, new[]{ "RoomId", "EventId", "EventData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.DeleteGameEventRequest), global::SubterfugeRemakeService.DeleteGameEventRequest.Parser, new[]{ "RoomId", "EventId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.DeleteGameEventResponse), global::SubterfugeRemakeService.DeleteGameEventResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateMessageGroupRequest), global::SubterfugeRemakeService.CreateMessageGroupRequest.Parser, new[]{ "RoomId", "UserIdsInGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateMessageGroupResponse), global::SubterfugeRemakeService.CreateMessageGroupResponse.Parser, new[]{ "Status", "GroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SendMessageRequest), global::SubterfugeRemakeService.SendMessageRequest.Parser, new[]{ "RoomId", "GroupId", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SendMessageResponse), global::SubterfugeRemakeService.SendMessageResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetMessageGroupsRequest), global::SubterfugeRemakeService.GetMessageGroupsRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetMessageGroupsResponse), global::SubterfugeRemakeService.GetMessageGroupsResponse.Parser, new[]{ "Status", "MessageGroups" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.MessageGroup), global::SubterfugeRemakeService.MessageGroup.Parser, new[]{ "GroupId", "GroupMembers", "Messages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.BlockPlayerRequest), global::SubterfugeRemakeService.BlockPlayerRequest.Parser, new[]{ "UserIdToBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.BlockPlayerResponse), global::SubterfugeRemakeService.BlockPlayerResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.UnblockPlayerRequest), global::SubterfugeRemakeService.UnblockPlayerRequest.Parser, new[]{ "UserIdToBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.UnblockPlayerResponse), global::SubterfugeRemakeService.UnblockPlayerResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewBlockedPlayersRequest), global::SubterfugeRemakeService.ViewBlockedPlayersRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewBlockedPlayersResponse), global::SubterfugeRemakeService.ViewBlockedPlayersResponse.Parser, new[]{ "Status", "BlockedUsers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SendFriendRequestRequest), global::SubterfugeRemakeService.SendFriendRequestRequest.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SendFriendRequestResponse), global::SubterfugeRemakeService.SendFriendRequestResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AcceptFriendRequestRequest), global::SubterfugeRemakeService.AcceptFriendRequestRequest.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AcceptFriendRequestResponse), global::SubterfugeRemakeService.AcceptFriendRequestResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.DenyFriendRequestRequest), global::SubterfugeRemakeService.DenyFriendRequestRequest.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.DenyFriendRequestResponse), global::SubterfugeRemakeService.DenyFriendRequestResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewFriendRequestsRequest), global::SubterfugeRemakeService.ViewFriendRequestsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewFriendRequestsResponse), global::SubterfugeRemakeService.ViewFriendRequestsResponse.Parser, new[]{ "Status", "IncomingFriends" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.RemoveFriendRequest), global::SubterfugeRemakeService.RemoveFriendRequest.Parser, new[]{ "FriendId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.RemoveFriendResponse), global::SubterfugeRemakeService.RemoveFriendResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewFriendsRequest), global::SubterfugeRemakeService.ViewFriendsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.ViewFriendsResponse), global::SubterfugeRemakeService.ViewFriendsResponse.Parser, new[]{ "Status", "Friends" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.HealthCheckRequest), global::SubterfugeRemakeService.HealthCheckRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.HealthCheckResponse), global::SubterfugeRemakeService.HealthCheckResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AuthorizedHealthCheckRequest), global::SubterfugeRemakeService.AuthorizedHealthCheckRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.AuthorizedHealthCheckResponse), global::SubterfugeRemakeService.AuthorizedHealthCheckResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.PlayerCurrentGamesRequest), global::SubterfugeRemakeService.PlayerCurrentGamesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.PlayerCurrentGamesResponse), global::SubterfugeRemakeService.PlayerCurrentGamesResponse.Parser, new[]{ "Status", "Games" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetGroupMessagesRequest), global::SubterfugeRemakeService.GetGroupMessagesRequest.Parser, new[]{ "RoomId", "GroupId", "Pagination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetGroupMessagesResponse), global::SubterfugeRemakeService.GetGroupMessagesResponse.Parser, new[]{ "Status", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SubmitCustomSpecialistRequest), global::SubterfugeRemakeService.SubmitCustomSpecialistRequest.Parser, new[]{ "Configuration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SubmitCustomSpecialistResponse), global::SubterfugeRemakeService.SubmitCustomSpecialistResponse.Parser, new[]{ "Status", "SpecialistConfigurationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetCustomSpecialistsRequest), global::SubterfugeRemakeService.GetCustomSpecialistsRequest.Parser, new[]{ "PageNumber", "SearchTerm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetCustomSpecialistsResponse), global::SubterfugeRemakeService.GetCustomSpecialistsResponse.Parser, new[]{ "Status", "CustomSpecialists" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateSpecialistPackageRequest), global::SubterfugeRemakeService.CreateSpecialistPackageRequest.Parser, new[]{ "SpecialistPackage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.CreateSpecialistPackageResponse), global::SubterfugeRemakeService.CreateSpecialistPackageResponse.Parser, new[]{ "Status", "SpecialistPackageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetSpecialistPackagesRequest), global::SubterfugeRemakeService.GetSpecialistPackagesRequest.Parser, new[]{ "PageNumber", "SearchTerm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetSpecialistPackagesResponse), global::SubterfugeRemakeService.GetSpecialistPackagesResponse.Parser, new[]{ "Status", "SpecialistPackages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetPlayerCustomSpecialistsRequest), global::SubterfugeRemakeService.GetPlayerCustomSpecialistsRequest.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetPlayerCustomSpecialistsResponse), global::SubterfugeRemakeService.GetPlayerCustomSpecialistsResponse.Parser, new[]{ "Status", "PlayerSpecialists" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetPlayerSpecialistPackagesRequest), global::SubterfugeRemakeService.GetPlayerSpecialistPackagesRequest.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GetPlayerSpecialistPackagesResponse), global::SubterfugeRemakeService.GetPlayerSpecialistPackagesResponse.Parser, new[]{ "Status", "PlayerPackages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.UserModel), global::SubterfugeRemakeService.UserModel.Parser, new[]{ "Id", "Username", "PasswordHash", "Email", "DeviceIdentifier", "EmailVerified", "Claims", "PushNotificationIdentifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.RoomModel), global::SubterfugeRemakeService.RoomModel.Parser, new[]{ "RoomId", "RoomStatus", "CreatorId", "RankedInformation", "Anonymous", "RoomName", "Goal", "Seed", "UnixTimeCreated", "UnixTimeStarted", "MaxPlayers", "AllowedSpecialists", "MinutesPerTick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GameEventModel), global::SubterfugeRemakeService.GameEventModel.Parser, new[]{ "EventId", "UnixTimeIssued", "OccursAtTick", "IssuedBy", "EventData", "EventType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.GroupModel), global::SubterfugeRemakeService.GroupModel.Parser, new[]{ "GroupId", "GroupMembers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.MessageModel), global::SubterfugeRemakeService.MessageModel.Parser, new[]{ "UnixTimeCreatedAt", "SenderId", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SpecialistConfiguration), global::SubterfugeRemakeService.SpecialistConfiguration.Parser, new[]{ "SpecialistId", "Priority", "SpecialistName", "Creator", "SpecialistEffects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SpecialistEffectConfiguration), global::SubterfugeRemakeService.SpecialistEffectConfiguration.Parser, new[]{ "Value", "EffectTrigger", "EffectTarget", "EffectTriggerRange", "EffectModifier", "EffectScale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SpecialistEffectScale), global::SubterfugeRemakeService.SpecialistEffectScale.Parser, new[]{ "EffectScale", "EffectScaleTarget", "ScaleTriggerRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SpecialistPackage), global::SubterfugeRemakeService.SpecialistPackage.Parser, new[]{ "Creator", "PackageName", "SpecialistPackageId", "SpecialistIds", "SpecialistPackageIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubterfugeRemakeService.SpecialistPackageConfiguration), global::SubterfugeRemakeService.SpecialistPackageConfiguration.Parser, new[]{ "SpecialistConfigurations" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RoomStatus {
    [pbr::OriginalName("OPEN")] Open = 0,
    [pbr::OriginalName("ONGOING")] Ongoing = 1,
    [pbr::OriginalName("CLOSED")] Closed = 2,
  }

  public enum Goal {
    [pbr::OriginalName("MINING")] Mining = 0,
    [pbr::OriginalName("DOMINATION")] Domination = 1,
  }

  public enum UserClaim {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("USER")] User = 1,
    [pbr::OriginalName("DEV")] Dev = 2,
    [pbr::OriginalName("ADMIN")] Admin = 3,
    [pbr::OriginalName("EMAIL_VERIFIED")] EmailVerified = 4,
    [pbr::OriginalName("BANNED")] Banned = 5,
  }

  public enum EventType {
    [pbr::OriginalName("UNKNOWN_EVENT")] UnknownEvent = 0,
    [pbr::OriginalName("LAUNCH_EVENT")] LaunchEvent = 1,
    [pbr::OriginalName("TOGGLE_SHIELD_EVENT")] ToggleShieldEvent = 2,
  }

  public enum EffectTrigger {
    [pbr::OriginalName("NoTrigger")] NoTrigger = 0,
    [pbr::OriginalName("Hire")] Hire = 1,
    [pbr::OriginalName("Promote")] Promote = 2,
    [pbr::OriginalName("SubLaunch")] SubLaunch = 3,
    [pbr::OriginalName("SubArrive")] SubArrive = 4,
    [pbr::OriginalName("OutpostCombat")] OutpostCombat = 5,
    [pbr::OriginalName("SubCombat")] SubCombat = 6,
    [pbr::OriginalName("CombatLoss")] CombatLoss = 7,
    [pbr::OriginalName("CombatVictory")] CombatVictory = 8,
    [pbr::OriginalName("FactoryProduce")] FactoryProduce = 9,
    [pbr::OriginalName("MineProduce")] MineProduce = 10,
    [pbr::OriginalName("SubEnter")] SubEnter = 11,
  }

  public enum EffectTarget {
    [pbr::OriginalName("NoTarget")] NoTarget = 0,
    [pbr::OriginalName("Firendly")] Firendly = 1,
    [pbr::OriginalName("Enemy")] Enemy = 2,
    [pbr::OriginalName("BothCombatParticipants")] BothCombatParticipants = 3,
    [pbr::OriginalName("All")] All = 4,
  }

  public enum EffectTriggerRange {
    [pbr::OriginalName("Self")] Self = 0,
    [pbr::OriginalName("Local")] Local = 1,
    [pbr::OriginalName("ConstantRange")] ConstantRange = 2,
    [pbr::OriginalName("LocationVisionRange")] LocationVisionRange = 3,
    [pbr::OriginalName("PlayerVisionRange")] PlayerVisionRange = 4,
    [pbr::OriginalName("Global")] Global = 5,
  }

  public enum EffectModifier {
    [pbr::OriginalName("Driller")] Driller = 0,
    [pbr::OriginalName("SpecialistCapacity")] SpecialistCapacity = 1,
    [pbr::OriginalName("ShieldValue")] ShieldValue = 2,
    [pbr::OriginalName("ShieldRegeneration")] ShieldRegeneration = 3,
    [pbr::OriginalName("ShieldMaxValue")] ShieldMaxValue = 4,
    [pbr::OriginalName("Vision")] Vision = 5,
    [pbr::OriginalName("Speed")] Speed = 6,
    [pbr::OriginalName("KillPlayer")] KillPlayer = 7,
    [pbr::OriginalName("VictoryPlayer")] VictoryPlayer = 8,
    [pbr::OriginalName("KillSpecialist")] KillSpecialist = 9,
    [pbr::OriginalName("NoEffect")] NoEffect = 10,
  }

  public enum EffectScale {
    [pbr::OriginalName("NoScale")] NoScale = 0,
    [pbr::OriginalName("ConstantValue")] ConstantValue = 1,
    [pbr::OriginalName("PlayerOutpostCount")] PlayerOutpostCount = 2,
    [pbr::OriginalName("PlayerMineCount")] PlayerMineCount = 3,
    [pbr::OriginalName("PlayerFactoryCount")] PlayerFactoryCount = 4,
    [pbr::OriginalName("PlayerDrillerCount")] PlayerDrillerCount = 5,
    [pbr::OriginalName("PlayerSpecialistCount")] PlayerSpecialistCount = 6,
  }

  #endregion

  #region Messages
  public sealed partial class ResponseStatus : pb::IMessage<ResponseStatus> {
    private static readonly pb::MessageParser<ResponseStatus> _parser = new pb::MessageParser<ResponseStatus>(() => new ResponseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus(ResponseStatus other) : this() {
      isSuccess_ = other.isSuccess_;
      detail_ = other.detail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus Clone() {
      return new ResponseStatus(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 2;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Detail != other.Detail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSuccess);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Detail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStatus other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 26: {
            Detail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthorizationRequest : pb::IMessage<AuthorizationRequest> {
    private static readonly pb::MessageParser<AuthorizationRequest> _parser = new pb::MessageParser<AuthorizationRequest>(() => new AuthorizationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationRequest(AuthorizationRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationRequest Clone() {
      return new AuthorizationRequest(this);
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthorizedTokenRequest : pb::IMessage<AuthorizedTokenRequest> {
    private static readonly pb::MessageParser<AuthorizedTokenRequest> _parser = new pb::MessageParser<AuthorizedTokenRequest>(() => new AuthorizedTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizedTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedTokenRequest(AuthorizedTokenRequest other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedTokenRequest Clone() {
      return new AuthorizedTokenRequest(this);
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizedTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizedTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizedTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthorizationResponse : pb::IMessage<AuthorizationResponse> {
    private static readonly pb::MessageParser<AuthorizationResponse> _parser = new pb::MessageParser<AuthorizationResponse>(() => new AuthorizationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationResponse(AuthorizationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationResponse Clone() {
      return new AuthorizationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::SubterfugeRemakeService.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::SubterfugeRemakeService.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::SubterfugeRemakeService.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountRegistrationRequest : pb::IMessage<AccountRegistrationRequest> {
    private static readonly pb::MessageParser<AccountRegistrationRequest> _parser = new pb::MessageParser<AccountRegistrationRequest>(() => new AccountRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationRequest(AccountRegistrationRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      email_ = other.email_;
      deviceIdentifier_ = other.deviceIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationRequest Clone() {
      return new AccountRegistrationRequest(this);
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DeviceIdentifier" field.</summary>
    public const int DeviceIdentifierFieldNumber = 4;
    private string deviceIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceIdentifier {
      get { return deviceIdentifier_; }
      set {
        deviceIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (Email != other.Email) return false;
      if (DeviceIdentifier != other.DeviceIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (DeviceIdentifier.Length != 0) hash ^= DeviceIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (DeviceIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeviceIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (DeviceIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.DeviceIdentifier.Length != 0) {
        DeviceIdentifier = other.DeviceIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 34: {
            DeviceIdentifier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountRegistrationResponse : pb::IMessage<AccountRegistrationResponse> {
    private static readonly pb::MessageParser<AccountRegistrationResponse> _parser = new pb::MessageParser<AccountRegistrationResponse>(() => new AccountRegistrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountRegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationResponse(AccountRegistrationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRegistrationResponse Clone() {
      return new AccountRegistrationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::SubterfugeRemakeService.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountRegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountRegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountRegistrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::SubterfugeRemakeService.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::SubterfugeRemakeService.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenLobbiesRequest : pb::IMessage<OpenLobbiesRequest> {
    private static readonly pb::MessageParser<OpenLobbiesRequest> _parser = new pb::MessageParser<OpenLobbiesRequest>(() => new OpenLobbiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenLobbiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesRequest(OpenLobbiesRequest other) : this() {
      roomStatus_ = other.roomStatus_;
      filterByPlayer_ = other.filterByPlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesRequest Clone() {
      return new OpenLobbiesRequest(this);
    }

    /// <summary>Field number for the "RoomStatus" field.</summary>
    public const int RoomStatusFieldNumber = 1;
    private global::SubterfugeRemakeService.RoomStatus roomStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "FilterByPlayer" field.</summary>
    public const int FilterByPlayerFieldNumber = 2;
    private bool filterByPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FilterByPlayer {
      get { return filterByPlayer_; }
      set {
        filterByPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenLobbiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenLobbiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomStatus != other.RoomStatus) return false;
      if (FilterByPlayer != other.FilterByPlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomStatus != 0) hash ^= RoomStatus.GetHashCode();
      if (FilterByPlayer != false) hash ^= FilterByPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomStatus != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RoomStatus);
      }
      if (FilterByPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(FilterByPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomStatus);
      }
      if (FilterByPlayer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenLobbiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomStatus != 0) {
        RoomStatus = other.RoomStatus;
      }
      if (other.FilterByPlayer != false) {
        FilterByPlayer = other.FilterByPlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomStatus = (global::SubterfugeRemakeService.RoomStatus) input.ReadEnum();
            break;
          }
          case 16: {
            FilterByPlayer = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenLobbiesResponse : pb::IMessage<OpenLobbiesResponse> {
    private static readonly pb::MessageParser<OpenLobbiesResponse> _parser = new pb::MessageParser<OpenLobbiesResponse>(() => new OpenLobbiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenLobbiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesResponse(OpenLobbiesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      rooms_ = other.rooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenLobbiesResponse Clone() {
      return new OpenLobbiesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Rooms" field.</summary>
    public const int RoomsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.Room> _repeated_rooms_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.Room.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.Room> rooms_ = new pbc::RepeatedField<global::SubterfugeRemakeService.Room>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.Room> Rooms {
      get { return rooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenLobbiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenLobbiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!rooms_.Equals(other.rooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= rooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      rooms_.WriteTo(output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += rooms_.CalculateSize(_repeated_rooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenLobbiesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      rooms_.Add(other.rooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Room : pb::IMessage<Room> {
    private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Room> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room(Room other) : this() {
      roomId_ = other.roomId_;
      roomStatus_ = other.roomStatus_;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      rankedInformation_ = other.rankedInformation_ != null ? other.rankedInformation_.Clone() : null;
      anonymous_ = other.anonymous_;
      roomName_ = other.roomName_;
      goal_ = other.goal_;
      seed_ = other.seed_;
      unixTimeCreated_ = other.unixTimeCreated_;
      unixTimeStarted_ = other.unixTimeStarted_;
      maxPlayers_ = other.maxPlayers_;
      players_ = other.players_.Clone();
      allowedSpecialists_ = other.allowedSpecialists_.Clone();
      minutesPerTick_ = other.minutesPerTick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room Clone() {
      return new Room(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomStatus" field.</summary>
    public const int RoomStatusFieldNumber = 2;
    private global::SubterfugeRemakeService.RoomStatus roomStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "Creator" field.</summary>
    public const int CreatorFieldNumber = 3;
    private global::SubterfugeRemakeService.User creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.User Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "RankedInformation" field.</summary>
    public const int RankedInformationFieldNumber = 4;
    private global::SubterfugeRemakeService.RankedInformation rankedInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.RankedInformation RankedInformation {
      get { return rankedInformation_; }
      set {
        rankedInformation_ = value;
      }
    }

    /// <summary>Field number for the "Anonymous" field.</summary>
    public const int AnonymousFieldNumber = 5;
    private bool anonymous_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Anonymous {
      get { return anonymous_; }
      set {
        anonymous_ = value;
      }
    }

    /// <summary>Field number for the "RoomName" field.</summary>
    public const int RoomNameFieldNumber = 6;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Goal" field.</summary>
    public const int GoalFieldNumber = 7;
    private global::SubterfugeRemakeService.Goal goal_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.Goal Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "Seed" field.</summary>
    public const int SeedFieldNumber = 8;
    private int seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "UnixTimeCreated" field.</summary>
    public const int UnixTimeCreatedFieldNumber = 9;
    private long unixTimeCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeCreated {
      get { return unixTimeCreated_; }
      set {
        unixTimeCreated_ = value;
      }
    }

    /// <summary>Field number for the "UnixTimeStarted" field.</summary>
    public const int UnixTimeStartedFieldNumber = 10;
    private long unixTimeStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeStarted {
      get { return unixTimeStarted_; }
      set {
        unixTimeStarted_ = value;
      }
    }

    /// <summary>Field number for the "MaxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 11;
    private long maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_players_codec
        = pb::FieldCodec.ForMessage(98, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> players_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "allowedSpecialists" field.</summary>
    public const int AllowedSpecialistsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_allowedSpecialists_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> allowedSpecialists_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowedSpecialists {
      get { return allowedSpecialists_; }
    }

    /// <summary>Field number for the "MinutesPerTick" field.</summary>
    public const int MinutesPerTickFieldNumber = 14;
    private double minutesPerTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinutesPerTick {
      get { return minutesPerTick_; }
      set {
        minutesPerTick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Room);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Room other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (RoomStatus != other.RoomStatus) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if (!object.Equals(RankedInformation, other.RankedInformation)) return false;
      if (Anonymous != other.Anonymous) return false;
      if (RoomName != other.RoomName) return false;
      if (Goal != other.Goal) return false;
      if (Seed != other.Seed) return false;
      if (UnixTimeCreated != other.UnixTimeCreated) return false;
      if (UnixTimeStarted != other.UnixTimeStarted) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!allowedSpecialists_.Equals(other.allowedSpecialists_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinutesPerTick, other.MinutesPerTick)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (RoomStatus != 0) hash ^= RoomStatus.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (rankedInformation_ != null) hash ^= RankedInformation.GetHashCode();
      if (Anonymous != false) hash ^= Anonymous.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (Goal != 0) hash ^= Goal.GetHashCode();
      if (Seed != 0) hash ^= Seed.GetHashCode();
      if (UnixTimeCreated != 0L) hash ^= UnixTimeCreated.GetHashCode();
      if (UnixTimeStarted != 0L) hash ^= UnixTimeStarted.GetHashCode();
      if (MaxPlayers != 0L) hash ^= MaxPlayers.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= allowedSpecialists_.GetHashCode();
      if (MinutesPerTick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinutesPerTick);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (RoomStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomStatus);
      }
      if (creator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Creator);
      }
      if (rankedInformation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RankedInformation);
      }
      if (Anonymous != false) {
        output.WriteRawTag(40);
        output.WriteBool(Anonymous);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (Goal != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Goal);
      }
      if (Seed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Seed);
      }
      if (UnixTimeCreated != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(UnixTimeCreated);
      }
      if (UnixTimeStarted != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(UnixTimeStarted);
      }
      if (MaxPlayers != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaxPlayers);
      }
      players_.WriteTo(output, _repeated_players_codec);
      allowedSpecialists_.WriteTo(output, _repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(MinutesPerTick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (RoomStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomStatus);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (rankedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RankedInformation);
      }
      if (Anonymous != false) {
        size += 1 + 1;
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Goal);
      }
      if (Seed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
      }
      if (UnixTimeCreated != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeCreated);
      }
      if (UnixTimeStarted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeStarted);
      }
      if (MaxPlayers != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPlayers);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += allowedSpecialists_.CalculateSize(_repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Room other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.RoomStatus != 0) {
        RoomStatus = other.RoomStatus;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::SubterfugeRemakeService.User();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.rankedInformation_ != null) {
        if (rankedInformation_ == null) {
          RankedInformation = new global::SubterfugeRemakeService.RankedInformation();
        }
        RankedInformation.MergeFrom(other.RankedInformation);
      }
      if (other.Anonymous != false) {
        Anonymous = other.Anonymous;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      if (other.Seed != 0) {
        Seed = other.Seed;
      }
      if (other.UnixTimeCreated != 0L) {
        UnixTimeCreated = other.UnixTimeCreated;
      }
      if (other.UnixTimeStarted != 0L) {
        UnixTimeStarted = other.UnixTimeStarted;
      }
      if (other.MaxPlayers != 0L) {
        MaxPlayers = other.MaxPlayers;
      }
      players_.Add(other.players_);
      allowedSpecialists_.Add(other.allowedSpecialists_);
      if (other.MinutesPerTick != 0D) {
        MinutesPerTick = other.MinutesPerTick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 16: {
            RoomStatus = (global::SubterfugeRemakeService.RoomStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (creator_ == null) {
              Creator = new global::SubterfugeRemakeService.User();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 34: {
            if (rankedInformation_ == null) {
              RankedInformation = new global::SubterfugeRemakeService.RankedInformation();
            }
            input.ReadMessage(RankedInformation);
            break;
          }
          case 40: {
            Anonymous = input.ReadBool();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 56: {
            Goal = (global::SubterfugeRemakeService.Goal) input.ReadEnum();
            break;
          }
          case 64: {
            Seed = input.ReadInt32();
            break;
          }
          case 72: {
            UnixTimeCreated = input.ReadInt64();
            break;
          }
          case 80: {
            UnixTimeStarted = input.ReadInt64();
            break;
          }
          case 88: {
            MaxPlayers = input.ReadInt64();
            break;
          }
          case 98: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 106: {
            allowedSpecialists_.AddEntriesFrom(input, _repeated_allowedSpecialists_codec);
            break;
          }
          case 113: {
            MinutesPerTick = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankedInformation : pb::IMessage<RankedInformation> {
    private static readonly pb::MessageParser<RankedInformation> _parser = new pb::MessageParser<RankedInformation>(() => new RankedInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankedInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankedInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankedInformation(RankedInformation other) : this() {
      isRanked_ = other.isRanked_;
      minRating_ = other.minRating_;
      maxRating_ = other.maxRating_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankedInformation Clone() {
      return new RankedInformation(this);
    }

    /// <summary>Field number for the "IsRanked" field.</summary>
    public const int IsRankedFieldNumber = 1;
    private bool isRanked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRanked {
      get { return isRanked_; }
      set {
        isRanked_ = value;
      }
    }

    /// <summary>Field number for the "MinRating" field.</summary>
    public const int MinRatingFieldNumber = 2;
    private long minRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinRating {
      get { return minRating_; }
      set {
        minRating_ = value;
      }
    }

    /// <summary>Field number for the "MaxRating" field.</summary>
    public const int MaxRatingFieldNumber = 3;
    private long maxRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxRating {
      get { return maxRating_; }
      set {
        maxRating_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankedInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankedInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsRanked != other.IsRanked) return false;
      if (MinRating != other.MinRating) return false;
      if (MaxRating != other.MaxRating) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsRanked != false) hash ^= IsRanked.GetHashCode();
      if (MinRating != 0L) hash ^= MinRating.GetHashCode();
      if (MaxRating != 0L) hash ^= MaxRating.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsRanked != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsRanked);
      }
      if (MinRating != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinRating);
      }
      if (MaxRating != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaxRating);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsRanked != false) {
        size += 1 + 1;
      }
      if (MinRating != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinRating);
      }
      if (MaxRating != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxRating);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankedInformation other) {
      if (other == null) {
        return;
      }
      if (other.IsRanked != false) {
        IsRanked = other.IsRanked;
      }
      if (other.MinRating != 0L) {
        MinRating = other.MinRating;
      }
      if (other.MaxRating != 0L) {
        MaxRating = other.MaxRating;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsRanked = input.ReadBool();
            break;
          }
          case 16: {
            MinRating = input.ReadInt64();
            break;
          }
          case 24: {
            MaxRating = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomRequest : pb::IMessage<CreateRoomRequest> {
    private static readonly pb::MessageParser<CreateRoomRequest> _parser = new pb::MessageParser<CreateRoomRequest>(() => new CreateRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest(CreateRoomRequest other) : this() {
      isRanked_ = other.isRanked_;
      anonymous_ = other.anonymous_;
      roomName_ = other.roomName_;
      goal_ = other.goal_;
      maxPlayers_ = other.maxPlayers_;
      allowedSpecialists_ = other.allowedSpecialists_.Clone();
      minutesPerTick_ = other.minutesPerTick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest Clone() {
      return new CreateRoomRequest(this);
    }

    /// <summary>Field number for the "isRanked" field.</summary>
    public const int IsRankedFieldNumber = 4;
    private bool isRanked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRanked {
      get { return isRanked_; }
      set {
        isRanked_ = value;
      }
    }

    /// <summary>Field number for the "Anonymous" field.</summary>
    public const int AnonymousFieldNumber = 5;
    private bool anonymous_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Anonymous {
      get { return anonymous_; }
      set {
        anonymous_ = value;
      }
    }

    /// <summary>Field number for the "RoomName" field.</summary>
    public const int RoomNameFieldNumber = 6;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Goal" field.</summary>
    public const int GoalFieldNumber = 7;
    private global::SubterfugeRemakeService.Goal goal_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.Goal Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "MaxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 11;
    private long maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "allowedSpecialists" field.</summary>
    public const int AllowedSpecialistsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_allowedSpecialists_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> allowedSpecialists_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowedSpecialists {
      get { return allowedSpecialists_; }
    }

    /// <summary>Field number for the "MinutesPerTick" field.</summary>
    public const int MinutesPerTickFieldNumber = 13;
    private double minutesPerTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinutesPerTick {
      get { return minutesPerTick_; }
      set {
        minutesPerTick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsRanked != other.IsRanked) return false;
      if (Anonymous != other.Anonymous) return false;
      if (RoomName != other.RoomName) return false;
      if (Goal != other.Goal) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if(!allowedSpecialists_.Equals(other.allowedSpecialists_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinutesPerTick, other.MinutesPerTick)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsRanked != false) hash ^= IsRanked.GetHashCode();
      if (Anonymous != false) hash ^= Anonymous.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (Goal != 0) hash ^= Goal.GetHashCode();
      if (MaxPlayers != 0L) hash ^= MaxPlayers.GetHashCode();
      hash ^= allowedSpecialists_.GetHashCode();
      if (MinutesPerTick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinutesPerTick);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsRanked != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsRanked);
      }
      if (Anonymous != false) {
        output.WriteRawTag(40);
        output.WriteBool(Anonymous);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (Goal != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Goal);
      }
      if (MaxPlayers != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaxPlayers);
      }
      allowedSpecialists_.WriteTo(output, _repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MinutesPerTick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsRanked != false) {
        size += 1 + 1;
      }
      if (Anonymous != false) {
        size += 1 + 1;
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Goal);
      }
      if (MaxPlayers != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPlayers);
      }
      size += allowedSpecialists_.CalculateSize(_repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.IsRanked != false) {
        IsRanked = other.IsRanked;
      }
      if (other.Anonymous != false) {
        Anonymous = other.Anonymous;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      if (other.MaxPlayers != 0L) {
        MaxPlayers = other.MaxPlayers;
      }
      allowedSpecialists_.Add(other.allowedSpecialists_);
      if (other.MinutesPerTick != 0D) {
        MinutesPerTick = other.MinutesPerTick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            IsRanked = input.ReadBool();
            break;
          }
          case 40: {
            Anonymous = input.ReadBool();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 56: {
            Goal = (global::SubterfugeRemakeService.Goal) input.ReadEnum();
            break;
          }
          case 88: {
            MaxPlayers = input.ReadInt64();
            break;
          }
          case 98: {
            allowedSpecialists_.AddEntriesFrom(input, _repeated_allowedSpecialists_codec);
            break;
          }
          case 105: {
            MinutesPerTick = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomResponse : pb::IMessage<CreateRoomResponse> {
    private static readonly pb::MessageParser<CreateRoomResponse> _parser = new pb::MessageParser<CreateRoomResponse>(() => new CreateRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse(CreateRoomResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      createdRoom_ = other.createdRoom_ != null ? other.createdRoom_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse Clone() {
      return new CreateRoomResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "createdRoom" field.</summary>
    public const int CreatedRoomFieldNumber = 2;
    private global::SubterfugeRemakeService.Room createdRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.Room CreatedRoom {
      get { return createdRoom_; }
      set {
        createdRoom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(CreatedRoom, other.CreatedRoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (createdRoom_ != null) hash ^= CreatedRoom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (createdRoom_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (createdRoom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedRoom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.createdRoom_ != null) {
        if (createdRoom_ == null) {
          CreatedRoom = new global::SubterfugeRemakeService.Room();
        }
        CreatedRoom.MergeFrom(other.CreatedRoom);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (createdRoom_ == null) {
              CreatedRoom = new global::SubterfugeRemakeService.Room();
            }
            input.ReadMessage(CreatedRoom);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest> {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomResponse : pb::IMessage<JoinRoomResponse> {
    private static readonly pb::MessageParser<JoinRoomResponse> _parser = new pb::MessageParser<JoinRoomResponse>(() => new JoinRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse(JoinRoomResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse Clone() {
      return new JoinRoomResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomRequest : pb::IMessage<LeaveRoomRequest> {
    private static readonly pb::MessageParser<LeaveRoomRequest> _parser = new pb::MessageParser<LeaveRoomRequest>(() => new LeaveRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest(LeaveRoomRequest other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest Clone() {
      return new LeaveRoomRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomResponse : pb::IMessage<LeaveRoomResponse> {
    private static readonly pb::MessageParser<LeaveRoomResponse> _parser = new pb::MessageParser<LeaveRoomResponse>(() => new LeaveRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse(LeaveRoomResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse Clone() {
      return new LeaveRoomResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartGameEarlyRequest : pb::IMessage<StartGameEarlyRequest> {
    private static readonly pb::MessageParser<StartGameEarlyRequest> _parser = new pb::MessageParser<StartGameEarlyRequest>(() => new StartGameEarlyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameEarlyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyRequest(StartGameEarlyRequest other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyRequest Clone() {
      return new StartGameEarlyRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameEarlyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameEarlyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameEarlyRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartGameEarlyResponse : pb::IMessage<StartGameEarlyResponse> {
    private static readonly pb::MessageParser<StartGameEarlyResponse> _parser = new pb::MessageParser<StartGameEarlyResponse>(() => new StartGameEarlyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameEarlyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyResponse(StartGameEarlyResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameEarlyResponse Clone() {
      return new StartGameEarlyResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameEarlyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameEarlyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameEarlyResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameRoomEventsRequest : pb::IMessage<GetGameRoomEventsRequest> {
    private static readonly pb::MessageParser<GetGameRoomEventsRequest> _parser = new pb::MessageParser<GetGameRoomEventsRequest>(() => new GetGameRoomEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameRoomEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsRequest(GetGameRoomEventsRequest other) : this() {
      roomId_ = other.roomId_;
      afterTick_ = other.afterTick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsRequest Clone() {
      return new GetGameRoomEventsRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AfterTick" field.</summary>
    public const int AfterTickFieldNumber = 2;
    private long afterTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AfterTick {
      get { return afterTick_; }
      set {
        afterTick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameRoomEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameRoomEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (AfterTick != other.AfterTick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (AfterTick != 0L) hash ^= AfterTick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (AfterTick != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AfterTick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (AfterTick != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AfterTick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameRoomEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.AfterTick != 0L) {
        AfterTick = other.AfterTick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 16: {
            AfterTick = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameRoomEventsResponse : pb::IMessage<GetGameRoomEventsResponse> {
    private static readonly pb::MessageParser<GetGameRoomEventsResponse> _parser = new pb::MessageParser<GetGameRoomEventsResponse>(() => new GetGameRoomEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameRoomEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsResponse(GetGameRoomEventsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      gameEvents_ = other.gameEvents_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameRoomEventsResponse Clone() {
      return new GetGameRoomEventsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "GameEvents" field.</summary>
    public const int GameEventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.GameEventModel> _repeated_gameEvents_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.GameEventModel.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.GameEventModel> gameEvents_ = new pbc::RepeatedField<global::SubterfugeRemakeService.GameEventModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.GameEventModel> GameEvents {
      get { return gameEvents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameRoomEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameRoomEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!gameEvents_.Equals(other.gameEvents_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= gameEvents_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      gameEvents_.WriteTo(output, _repeated_gameEvents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += gameEvents_.CalculateSize(_repeated_gameEvents_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameRoomEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      gameEvents_.Add(other.gameEvents_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            gameEvents_.AddEntriesFrom(input, _repeated_gameEvents_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameEventRequest : pb::IMessage<GameEventRequest> {
    private static readonly pb::MessageParser<GameEventRequest> _parser = new pb::MessageParser<GameEventRequest>(() => new GameEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventRequest(GameEventRequest other) : this() {
      eventType_ = other.eventType_;
      occursAtTick_ = other.occursAtTick_;
      eventData_ = other.eventData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventRequest Clone() {
      return new GameEventRequest(this);
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::SubterfugeRemakeService.EventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "OccursAtTick" field.</summary>
    public const int OccursAtTickFieldNumber = 3;
    private int occursAtTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OccursAtTick {
      get { return occursAtTick_; }
      set {
        occursAtTick_ = value;
      }
    }

    /// <summary>Field number for the "EventData" field.</summary>
    public const int EventDataFieldNumber = 5;
    private pb::ByteString eventData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EventData {
      get { return eventData_; }
      set {
        eventData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (OccursAtTick != other.OccursAtTick) return false;
      if (EventData != other.EventData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (OccursAtTick != 0) hash ^= OccursAtTick.GetHashCode();
      if (EventData.Length != 0) hash ^= EventData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (OccursAtTick != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OccursAtTick);
      }
      if (EventData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EventData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (OccursAtTick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OccursAtTick);
      }
      if (EventData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EventData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.OccursAtTick != 0) {
        OccursAtTick = other.OccursAtTick;
      }
      if (other.EventData.Length != 0) {
        EventData = other.EventData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::SubterfugeRemakeService.EventType) input.ReadEnum();
            break;
          }
          case 24: {
            OccursAtTick = input.ReadInt32();
            break;
          }
          case 42: {
            EventData = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitGameEventRequest : pb::IMessage<SubmitGameEventRequest> {
    private static readonly pb::MessageParser<SubmitGameEventRequest> _parser = new pb::MessageParser<SubmitGameEventRequest>(() => new SubmitGameEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitGameEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventRequest(SubmitGameEventRequest other) : this() {
      roomId_ = other.roomId_;
      eventData_ = other.eventData_ != null ? other.eventData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventRequest Clone() {
      return new SubmitGameEventRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventData" field.</summary>
    public const int EventDataFieldNumber = 2;
    private global::SubterfugeRemakeService.GameEventRequest eventData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.GameEventRequest EventData {
      get { return eventData_; }
      set {
        eventData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitGameEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitGameEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (!object.Equals(EventData, other.EventData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (eventData_ != null) hash ^= EventData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (eventData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (eventData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitGameEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.eventData_ != null) {
        if (eventData_ == null) {
          EventData = new global::SubterfugeRemakeService.GameEventRequest();
        }
        EventData.MergeFrom(other.EventData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            if (eventData_ == null) {
              EventData = new global::SubterfugeRemakeService.GameEventRequest();
            }
            input.ReadMessage(EventData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitGameEventResponse : pb::IMessage<SubmitGameEventResponse> {
    private static readonly pb::MessageParser<SubmitGameEventResponse> _parser = new pb::MessageParser<SubmitGameEventResponse>(() => new SubmitGameEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitGameEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventResponse(SubmitGameEventResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      eventId_ = other.eventId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitGameEventResponse Clone() {
      return new SubmitGameEventResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 3;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitGameEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitGameEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (EventId != other.EventId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitGameEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            EventId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateGameEventRequest : pb::IMessage<UpdateGameEventRequest> {
    private static readonly pb::MessageParser<UpdateGameEventRequest> _parser = new pb::MessageParser<UpdateGameEventRequest>(() => new UpdateGameEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGameEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGameEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGameEventRequest(UpdateGameEventRequest other) : this() {
      roomId_ = other.roomId_;
      eventId_ = other.eventId_;
      eventData_ = other.eventData_ != null ? other.eventData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGameEventRequest Clone() {
      return new UpdateGameEventRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 2;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventData" field.</summary>
    public const int EventDataFieldNumber = 3;
    private global::SubterfugeRemakeService.GameEventRequest eventData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.GameEventRequest EventData {
      get { return eventData_; }
      set {
        eventData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGameEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGameEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (EventId != other.EventId) return false;
      if (!object.Equals(EventData, other.EventData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (eventData_ != null) hash ^= EventData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (eventData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EventData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (eventData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGameEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.eventData_ != null) {
        if (eventData_ == null) {
          EventData = new global::SubterfugeRemakeService.GameEventRequest();
        }
        EventData.MergeFrom(other.EventData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 26: {
            if (eventData_ == null) {
              EventData = new global::SubterfugeRemakeService.GameEventRequest();
            }
            input.ReadMessage(EventData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteGameEventRequest : pb::IMessage<DeleteGameEventRequest> {
    private static readonly pb::MessageParser<DeleteGameEventRequest> _parser = new pb::MessageParser<DeleteGameEventRequest>(() => new DeleteGameEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGameEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventRequest(DeleteGameEventRequest other) : this() {
      roomId_ = other.roomId_;
      eventId_ = other.eventId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventRequest Clone() {
      return new DeleteGameEventRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 2;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGameEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGameEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (EventId != other.EventId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGameEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteGameEventResponse : pb::IMessage<DeleteGameEventResponse> {
    private static readonly pb::MessageParser<DeleteGameEventResponse> _parser = new pb::MessageParser<DeleteGameEventResponse>(() => new DeleteGameEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGameEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventResponse(DeleteGameEventResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGameEventResponse Clone() {
      return new DeleteGameEventResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGameEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGameEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGameEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMessageGroupRequest : pb::IMessage<CreateMessageGroupRequest> {
    private static readonly pb::MessageParser<CreateMessageGroupRequest> _parser = new pb::MessageParser<CreateMessageGroupRequest>(() => new CreateMessageGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMessageGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupRequest(CreateMessageGroupRequest other) : this() {
      roomId_ = other.roomId_;
      userIdsInGroup_ = other.userIdsInGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupRequest Clone() {
      return new CreateMessageGroupRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserIdsInGroup" field.</summary>
    public const int UserIdsInGroupFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_userIdsInGroup_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> userIdsInGroup_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIdsInGroup {
      get { return userIdsInGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMessageGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMessageGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if(!userIdsInGroup_.Equals(other.userIdsInGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      hash ^= userIdsInGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      userIdsInGroup_.WriteTo(output, _repeated_userIdsInGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      size += userIdsInGroup_.CalculateSize(_repeated_userIdsInGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMessageGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      userIdsInGroup_.Add(other.userIdsInGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            userIdsInGroup_.AddEntriesFrom(input, _repeated_userIdsInGroup_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMessageGroupResponse : pb::IMessage<CreateMessageGroupResponse> {
    private static readonly pb::MessageParser<CreateMessageGroupResponse> _parser = new pb::MessageParser<CreateMessageGroupResponse>(() => new CreateMessageGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMessageGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupResponse(CreateMessageGroupResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageGroupResponse Clone() {
      return new CreateMessageGroupResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMessageGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMessageGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMessageGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendMessageRequest : pb::IMessage<SendMessageRequest> {
    private static readonly pb::MessageParser<SendMessageRequest> _parser = new pb::MessageParser<SendMessageRequest>(() => new SendMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest(SendMessageRequest other) : this() {
      roomId_ = other.roomId_;
      groupId_ = other.groupId_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest Clone() {
      return new SendMessageRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (GroupId != other.GroupId) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendMessageResponse : pb::IMessage<SendMessageResponse> {
    private static readonly pb::MessageParser<SendMessageResponse> _parser = new pb::MessageParser<SendMessageResponse>(() => new SendMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse(SendMessageResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse Clone() {
      return new SendMessageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMessageGroupsRequest : pb::IMessage<GetMessageGroupsRequest> {
    private static readonly pb::MessageParser<GetMessageGroupsRequest> _parser = new pb::MessageParser<GetMessageGroupsRequest>(() => new GetMessageGroupsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMessageGroupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsRequest(GetMessageGroupsRequest other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsRequest Clone() {
      return new GetMessageGroupsRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMessageGroupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMessageGroupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMessageGroupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMessageGroupsResponse : pb::IMessage<GetMessageGroupsResponse> {
    private static readonly pb::MessageParser<GetMessageGroupsResponse> _parser = new pb::MessageParser<GetMessageGroupsResponse>(() => new GetMessageGroupsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMessageGroupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsResponse(GetMessageGroupsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      messageGroups_ = other.messageGroups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageGroupsResponse Clone() {
      return new GetMessageGroupsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "MessageGroups" field.</summary>
    public const int MessageGroupsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.MessageGroup> _repeated_messageGroups_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.MessageGroup.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.MessageGroup> messageGroups_ = new pbc::RepeatedField<global::SubterfugeRemakeService.MessageGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.MessageGroup> MessageGroups {
      get { return messageGroups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMessageGroupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMessageGroupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!messageGroups_.Equals(other.messageGroups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= messageGroups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      messageGroups_.WriteTo(output, _repeated_messageGroups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += messageGroups_.CalculateSize(_repeated_messageGroups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMessageGroupsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      messageGroups_.Add(other.messageGroups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            messageGroups_.AddEntriesFrom(input, _repeated_messageGroups_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageGroup : pb::IMessage<MessageGroup> {
    private static readonly pb::MessageParser<MessageGroup> _parser = new pb::MessageParser<MessageGroup>(() => new MessageGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageGroup(MessageGroup other) : this() {
      groupId_ = other.groupId_;
      groupMembers_ = other.groupMembers_.Clone();
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageGroup Clone() {
      return new MessageGroup(this);
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupMembers" field.</summary>
    public const int GroupMembersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_groupMembers_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> groupMembers_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> GroupMembers {
      get { return groupMembers_; }
    }

    /// <summary>Field number for the "Messages" field.</summary>
    public const int MessagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.MessageModel> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(26, global::SubterfugeRemakeService.MessageModel.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.MessageModel> messages_ = new pbc::RepeatedField<global::SubterfugeRemakeService.MessageModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.MessageModel> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if(!groupMembers_.Equals(other.groupMembers_)) return false;
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= groupMembers_.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      groupMembers_.WriteTo(output, _repeated_groupMembers_codec);
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      size += groupMembers_.CalculateSize(_repeated_groupMembers_codec);
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageGroup other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      groupMembers_.Add(other.groupMembers_);
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            groupMembers_.AddEntriesFrom(input, _repeated_groupMembers_codec);
            break;
          }
          case 26: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockPlayerRequest : pb::IMessage<BlockPlayerRequest> {
    private static readonly pb::MessageParser<BlockPlayerRequest> _parser = new pb::MessageParser<BlockPlayerRequest>(() => new BlockPlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockPlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerRequest(BlockPlayerRequest other) : this() {
      userIdToBlock_ = other.userIdToBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerRequest Clone() {
      return new BlockPlayerRequest(this);
    }

    /// <summary>Field number for the "UserIdToBlock" field.</summary>
    public const int UserIdToBlockFieldNumber = 1;
    private string userIdToBlock_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdToBlock {
      get { return userIdToBlock_; }
      set {
        userIdToBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockPlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockPlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserIdToBlock != other.UserIdToBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserIdToBlock.Length != 0) hash ^= UserIdToBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserIdToBlock.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserIdToBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserIdToBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdToBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockPlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserIdToBlock.Length != 0) {
        UserIdToBlock = other.UserIdToBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserIdToBlock = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockPlayerResponse : pb::IMessage<BlockPlayerResponse> {
    private static readonly pb::MessageParser<BlockPlayerResponse> _parser = new pb::MessageParser<BlockPlayerResponse>(() => new BlockPlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockPlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerResponse(BlockPlayerResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockPlayerResponse Clone() {
      return new BlockPlayerResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockPlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockPlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockPlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnblockPlayerRequest : pb::IMessage<UnblockPlayerRequest> {
    private static readonly pb::MessageParser<UnblockPlayerRequest> _parser = new pb::MessageParser<UnblockPlayerRequest>(() => new UnblockPlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnblockPlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerRequest(UnblockPlayerRequest other) : this() {
      userIdToBlock_ = other.userIdToBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerRequest Clone() {
      return new UnblockPlayerRequest(this);
    }

    /// <summary>Field number for the "UserIdToBlock" field.</summary>
    public const int UserIdToBlockFieldNumber = 1;
    private string userIdToBlock_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdToBlock {
      get { return userIdToBlock_; }
      set {
        userIdToBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnblockPlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnblockPlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserIdToBlock != other.UserIdToBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserIdToBlock.Length != 0) hash ^= UserIdToBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserIdToBlock.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserIdToBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserIdToBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdToBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnblockPlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserIdToBlock.Length != 0) {
        UserIdToBlock = other.UserIdToBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserIdToBlock = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnblockPlayerResponse : pb::IMessage<UnblockPlayerResponse> {
    private static readonly pb::MessageParser<UnblockPlayerResponse> _parser = new pb::MessageParser<UnblockPlayerResponse>(() => new UnblockPlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnblockPlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerResponse(UnblockPlayerResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnblockPlayerResponse Clone() {
      return new UnblockPlayerResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnblockPlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnblockPlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnblockPlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewBlockedPlayersRequest : pb::IMessage<ViewBlockedPlayersRequest> {
    private static readonly pb::MessageParser<ViewBlockedPlayersRequest> _parser = new pb::MessageParser<ViewBlockedPlayersRequest>(() => new ViewBlockedPlayersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewBlockedPlayersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersRequest(ViewBlockedPlayersRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersRequest Clone() {
      return new ViewBlockedPlayersRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewBlockedPlayersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewBlockedPlayersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewBlockedPlayersRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ViewBlockedPlayersResponse : pb::IMessage<ViewBlockedPlayersResponse> {
    private static readonly pb::MessageParser<ViewBlockedPlayersResponse> _parser = new pb::MessageParser<ViewBlockedPlayersResponse>(() => new ViewBlockedPlayersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewBlockedPlayersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersResponse(ViewBlockedPlayersResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      blockedUsers_ = other.blockedUsers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewBlockedPlayersResponse Clone() {
      return new ViewBlockedPlayersResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "BlockedUsers" field.</summary>
    public const int BlockedUsersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_blockedUsers_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> blockedUsers_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> BlockedUsers {
      get { return blockedUsers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewBlockedPlayersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewBlockedPlayersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!blockedUsers_.Equals(other.blockedUsers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= blockedUsers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      blockedUsers_.WriteTo(output, _repeated_blockedUsers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += blockedUsers_.CalculateSize(_repeated_blockedUsers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewBlockedPlayersResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      blockedUsers_.Add(other.blockedUsers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            blockedUsers_.AddEntriesFrom(input, _repeated_blockedUsers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendFriendRequestRequest : pb::IMessage<SendFriendRequestRequest> {
    private static readonly pb::MessageParser<SendFriendRequestRequest> _parser = new pb::MessageParser<SendFriendRequestRequest>(() => new SendFriendRequestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendFriendRequestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestRequest(SendFriendRequestRequest other) : this() {
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestRequest Clone() {
      return new SendFriendRequestRequest(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendFriendRequestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendFriendRequestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendFriendRequestRequest other) {
      if (other == null) {
        return;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendFriendRequestResponse : pb::IMessage<SendFriendRequestResponse> {
    private static readonly pb::MessageParser<SendFriendRequestResponse> _parser = new pb::MessageParser<SendFriendRequestResponse>(() => new SendFriendRequestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendFriendRequestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestResponse(SendFriendRequestResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendFriendRequestResponse Clone() {
      return new SendFriendRequestResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendFriendRequestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendFriendRequestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendFriendRequestResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptFriendRequestRequest : pb::IMessage<AcceptFriendRequestRequest> {
    private static readonly pb::MessageParser<AcceptFriendRequestRequest> _parser = new pb::MessageParser<AcceptFriendRequestRequest>(() => new AcceptFriendRequestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptFriendRequestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestRequest(AcceptFriendRequestRequest other) : this() {
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestRequest Clone() {
      return new AcceptFriendRequestRequest(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptFriendRequestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptFriendRequestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptFriendRequestRequest other) {
      if (other == null) {
        return;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptFriendRequestResponse : pb::IMessage<AcceptFriendRequestResponse> {
    private static readonly pb::MessageParser<AcceptFriendRequestResponse> _parser = new pb::MessageParser<AcceptFriendRequestResponse>(() => new AcceptFriendRequestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptFriendRequestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestResponse(AcceptFriendRequestResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptFriendRequestResponse Clone() {
      return new AcceptFriendRequestResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptFriendRequestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptFriendRequestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptFriendRequestResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DenyFriendRequestRequest : pb::IMessage<DenyFriendRequestRequest> {
    private static readonly pb::MessageParser<DenyFriendRequestRequest> _parser = new pb::MessageParser<DenyFriendRequestRequest>(() => new DenyFriendRequestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DenyFriendRequestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestRequest(DenyFriendRequestRequest other) : this() {
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestRequest Clone() {
      return new DenyFriendRequestRequest(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DenyFriendRequestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DenyFriendRequestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DenyFriendRequestRequest other) {
      if (other == null) {
        return;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DenyFriendRequestResponse : pb::IMessage<DenyFriendRequestResponse> {
    private static readonly pb::MessageParser<DenyFriendRequestResponse> _parser = new pb::MessageParser<DenyFriendRequestResponse>(() => new DenyFriendRequestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DenyFriendRequestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestResponse(DenyFriendRequestResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenyFriendRequestResponse Clone() {
      return new DenyFriendRequestResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DenyFriendRequestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DenyFriendRequestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DenyFriendRequestResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewFriendRequestsRequest : pb::IMessage<ViewFriendRequestsRequest> {
    private static readonly pb::MessageParser<ViewFriendRequestsRequest> _parser = new pb::MessageParser<ViewFriendRequestsRequest>(() => new ViewFriendRequestsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendRequestsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsRequest(ViewFriendRequestsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsRequest Clone() {
      return new ViewFriendRequestsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendRequestsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendRequestsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendRequestsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ViewFriendRequestsResponse : pb::IMessage<ViewFriendRequestsResponse> {
    private static readonly pb::MessageParser<ViewFriendRequestsResponse> _parser = new pb::MessageParser<ViewFriendRequestsResponse>(() => new ViewFriendRequestsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendRequestsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsResponse(ViewFriendRequestsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      incomingFriends_ = other.incomingFriends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendRequestsResponse Clone() {
      return new ViewFriendRequestsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "IncomingFriends" field.</summary>
    public const int IncomingFriendsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_incomingFriends_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> incomingFriends_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> IncomingFriends {
      get { return incomingFriends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendRequestsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendRequestsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!incomingFriends_.Equals(other.incomingFriends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= incomingFriends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      incomingFriends_.WriteTo(output, _repeated_incomingFriends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += incomingFriends_.CalculateSize(_repeated_incomingFriends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendRequestsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      incomingFriends_.Add(other.incomingFriends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            incomingFriends_.AddEntriesFrom(input, _repeated_incomingFriends_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFriendRequest : pb::IMessage<RemoveFriendRequest> {
    private static readonly pb::MessageParser<RemoveFriendRequest> _parser = new pb::MessageParser<RemoveFriendRequest>(() => new RemoveFriendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFriendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest(RemoveFriendRequest other) : this() {
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest Clone() {
      return new RemoveFriendRequest(this);
    }

    /// <summary>Field number for the "FriendId" field.</summary>
    public const int FriendIdFieldNumber = 1;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFriendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFriendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FriendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFriendRequest other) {
      if (other == null) {
        return;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFriendResponse : pb::IMessage<RemoveFriendResponse> {
    private static readonly pb::MessageParser<RemoveFriendResponse> _parser = new pb::MessageParser<RemoveFriendResponse>(() => new RemoveFriendResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFriendResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResponse(RemoveFriendResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResponse Clone() {
      return new RemoveFriendResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFriendResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFriendResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFriendResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewFriendsRequest : pb::IMessage<ViewFriendsRequest> {
    private static readonly pb::MessageParser<ViewFriendsRequest> _parser = new pb::MessageParser<ViewFriendsRequest>(() => new ViewFriendsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest(ViewFriendsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest Clone() {
      return new ViewFriendsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ViewFriendsResponse : pb::IMessage<ViewFriendsResponse> {
    private static readonly pb::MessageParser<ViewFriendsResponse> _parser = new pb::MessageParser<ViewFriendsResponse>(() => new ViewFriendsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse(ViewFriendsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      friends_ = other.friends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse Clone() {
      return new ViewFriendsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Friends" field.</summary>
    public const int FriendsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> friends_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> Friends {
      get { return friends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!friends_.Equals(other.friends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= friends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      friends_.WriteTo(output, _repeated_friends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += friends_.CalculateSize(_repeated_friends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      friends_.Add(other.friends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HealthCheckRequest : pb::IMessage<HealthCheckRequest> {
    private static readonly pb::MessageParser<HealthCheckRequest> _parser = new pb::MessageParser<HealthCheckRequest>(() => new HealthCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest(HealthCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest Clone() {
      return new HealthCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HealthCheckResponse : pb::IMessage<HealthCheckResponse> {
    private static readonly pb::MessageParser<HealthCheckResponse> _parser = new pb::MessageParser<HealthCheckResponse>(() => new HealthCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse(HealthCheckResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse Clone() {
      return new HealthCheckResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthorizedHealthCheckRequest : pb::IMessage<AuthorizedHealthCheckRequest> {
    private static readonly pb::MessageParser<AuthorizedHealthCheckRequest> _parser = new pb::MessageParser<AuthorizedHealthCheckRequest>(() => new AuthorizedHealthCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizedHealthCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckRequest(AuthorizedHealthCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckRequest Clone() {
      return new AuthorizedHealthCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizedHealthCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizedHealthCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizedHealthCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AuthorizedHealthCheckResponse : pb::IMessage<AuthorizedHealthCheckResponse> {
    private static readonly pb::MessageParser<AuthorizedHealthCheckResponse> _parser = new pb::MessageParser<AuthorizedHealthCheckResponse>(() => new AuthorizedHealthCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizedHealthCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckResponse(AuthorizedHealthCheckResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizedHealthCheckResponse Clone() {
      return new AuthorizedHealthCheckResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizedHealthCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizedHealthCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizedHealthCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerCurrentGamesRequest : pb::IMessage<PlayerCurrentGamesRequest> {
    private static readonly pb::MessageParser<PlayerCurrentGamesRequest> _parser = new pb::MessageParser<PlayerCurrentGamesRequest>(() => new PlayerCurrentGamesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerCurrentGamesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesRequest(PlayerCurrentGamesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesRequest Clone() {
      return new PlayerCurrentGamesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerCurrentGamesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerCurrentGamesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerCurrentGamesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PlayerCurrentGamesResponse : pb::IMessage<PlayerCurrentGamesResponse> {
    private static readonly pb::MessageParser<PlayerCurrentGamesResponse> _parser = new pb::MessageParser<PlayerCurrentGamesResponse>(() => new PlayerCurrentGamesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerCurrentGamesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesResponse(PlayerCurrentGamesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerCurrentGamesResponse Clone() {
      return new PlayerCurrentGamesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.Room> _repeated_games_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.Room.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.Room> games_ = new pbc::RepeatedField<global::SubterfugeRemakeService.Room>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.Room> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerCurrentGamesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerCurrentGamesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerCurrentGamesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGroupMessagesRequest : pb::IMessage<GetGroupMessagesRequest> {
    private static readonly pb::MessageParser<GetGroupMessagesRequest> _parser = new pb::MessageParser<GetGroupMessagesRequest>(() => new GetGroupMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGroupMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesRequest(GetGroupMessagesRequest other) : this() {
      roomId_ = other.roomId_;
      groupId_ = other.groupId_;
      pagination_ = other.pagination_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesRequest Clone() {
      return new GetGroupMessagesRequest(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private int pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGroupMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGroupMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (GroupId != other.GroupId) return false;
      if (Pagination != other.Pagination) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Pagination != 0) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Pagination != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Pagination != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGroupMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Pagination != 0) {
        Pagination = other.Pagination;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 24: {
            Pagination = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGroupMessagesResponse : pb::IMessage<GetGroupMessagesResponse> {
    private static readonly pb::MessageParser<GetGroupMessagesResponse> _parser = new pb::MessageParser<GetGroupMessagesResponse>(() => new GetGroupMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGroupMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesResponse(GetGroupMessagesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      group_ = other.group_ != null ? other.group_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupMessagesResponse Clone() {
      return new GetGroupMessagesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::SubterfugeRemakeService.MessageGroup group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.MessageGroup Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGroupMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGroupMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGroupMessagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          Group = new global::SubterfugeRemakeService.MessageGroup();
        }
        Group.MergeFrom(other.Group);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (group_ == null) {
              Group = new global::SubterfugeRemakeService.MessageGroup();
            }
            input.ReadMessage(Group);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitCustomSpecialistRequest : pb::IMessage<SubmitCustomSpecialistRequest> {
    private static readonly pb::MessageParser<SubmitCustomSpecialistRequest> _parser = new pb::MessageParser<SubmitCustomSpecialistRequest>(() => new SubmitCustomSpecialistRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitCustomSpecialistRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistRequest(SubmitCustomSpecialistRequest other) : this() {
      configuration_ = other.configuration_ != null ? other.configuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistRequest Clone() {
      return new SubmitCustomSpecialistRequest(this);
    }

    /// <summary>Field number for the "Configuration" field.</summary>
    public const int ConfigurationFieldNumber = 1;
    private global::SubterfugeRemakeService.SpecialistConfiguration configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.SpecialistConfiguration Configuration {
      get { return configuration_; }
      set {
        configuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitCustomSpecialistRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitCustomSpecialistRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Configuration, other.Configuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (configuration_ != null) hash ^= Configuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (configuration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (configuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitCustomSpecialistRequest other) {
      if (other == null) {
        return;
      }
      if (other.configuration_ != null) {
        if (configuration_ == null) {
          Configuration = new global::SubterfugeRemakeService.SpecialistConfiguration();
        }
        Configuration.MergeFrom(other.Configuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (configuration_ == null) {
              Configuration = new global::SubterfugeRemakeService.SpecialistConfiguration();
            }
            input.ReadMessage(Configuration);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitCustomSpecialistResponse : pb::IMessage<SubmitCustomSpecialistResponse> {
    private static readonly pb::MessageParser<SubmitCustomSpecialistResponse> _parser = new pb::MessageParser<SubmitCustomSpecialistResponse>(() => new SubmitCustomSpecialistResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitCustomSpecialistResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistResponse(SubmitCustomSpecialistResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      specialistConfigurationId_ = other.specialistConfigurationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitCustomSpecialistResponse Clone() {
      return new SubmitCustomSpecialistResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "SpecialistConfigurationId" field.</summary>
    public const int SpecialistConfigurationIdFieldNumber = 2;
    private string specialistConfigurationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialistConfigurationId {
      get { return specialistConfigurationId_; }
      set {
        specialistConfigurationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitCustomSpecialistResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitCustomSpecialistResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (SpecialistConfigurationId != other.SpecialistConfigurationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (SpecialistConfigurationId.Length != 0) hash ^= SpecialistConfigurationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (SpecialistConfigurationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SpecialistConfigurationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (SpecialistConfigurationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialistConfigurationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitCustomSpecialistResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.SpecialistConfigurationId.Length != 0) {
        SpecialistConfigurationId = other.SpecialistConfigurationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            SpecialistConfigurationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCustomSpecialistsRequest : pb::IMessage<GetCustomSpecialistsRequest> {
    private static readonly pb::MessageParser<GetCustomSpecialistsRequest> _parser = new pb::MessageParser<GetCustomSpecialistsRequest>(() => new GetCustomSpecialistsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCustomSpecialistsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsRequest(GetCustomSpecialistsRequest other) : this() {
      pageNumber_ = other.pageNumber_;
      searchTerm_ = other.searchTerm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsRequest Clone() {
      return new GetCustomSpecialistsRequest(this);
    }

    /// <summary>Field number for the "pageNumber" field.</summary>
    public const int PageNumberFieldNumber = 1;
    private long pageNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    /// <summary>Field number for the "searchTerm" field.</summary>
    public const int SearchTermFieldNumber = 2;
    private string searchTerm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchTerm {
      get { return searchTerm_; }
      set {
        searchTerm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCustomSpecialistsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCustomSpecialistsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageNumber != other.PageNumber) return false;
      if (SearchTerm != other.SearchTerm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageNumber != 0L) hash ^= PageNumber.GetHashCode();
      if (SearchTerm.Length != 0) hash ^= SearchTerm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PageNumber);
      }
      if (SearchTerm.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SearchTerm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageNumber);
      }
      if (SearchTerm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTerm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCustomSpecialistsRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageNumber != 0L) {
        PageNumber = other.PageNumber;
      }
      if (other.SearchTerm.Length != 0) {
        SearchTerm = other.SearchTerm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PageNumber = input.ReadInt64();
            break;
          }
          case 18: {
            SearchTerm = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCustomSpecialistsResponse : pb::IMessage<GetCustomSpecialistsResponse> {
    private static readonly pb::MessageParser<GetCustomSpecialistsResponse> _parser = new pb::MessageParser<GetCustomSpecialistsResponse>(() => new GetCustomSpecialistsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCustomSpecialistsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsResponse(GetCustomSpecialistsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      customSpecialists_ = other.customSpecialists_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCustomSpecialistsResponse Clone() {
      return new GetCustomSpecialistsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "CustomSpecialists" field.</summary>
    public const int CustomSpecialistsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistConfiguration> _repeated_customSpecialists_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.SpecialistConfiguration.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> customSpecialists_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> CustomSpecialists {
      get { return customSpecialists_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCustomSpecialistsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCustomSpecialistsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!customSpecialists_.Equals(other.customSpecialists_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= customSpecialists_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      customSpecialists_.WriteTo(output, _repeated_customSpecialists_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += customSpecialists_.CalculateSize(_repeated_customSpecialists_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCustomSpecialistsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      customSpecialists_.Add(other.customSpecialists_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            customSpecialists_.AddEntriesFrom(input, _repeated_customSpecialists_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateSpecialistPackageRequest : pb::IMessage<CreateSpecialistPackageRequest> {
    private static readonly pb::MessageParser<CreateSpecialistPackageRequest> _parser = new pb::MessageParser<CreateSpecialistPackageRequest>(() => new CreateSpecialistPackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSpecialistPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageRequest(CreateSpecialistPackageRequest other) : this() {
      specialistPackage_ = other.specialistPackage_ != null ? other.specialistPackage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageRequest Clone() {
      return new CreateSpecialistPackageRequest(this);
    }

    /// <summary>Field number for the "SpecialistPackage" field.</summary>
    public const int SpecialistPackageFieldNumber = 1;
    private global::SubterfugeRemakeService.SpecialistPackage specialistPackage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.SpecialistPackage SpecialistPackage {
      get { return specialistPackage_; }
      set {
        specialistPackage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSpecialistPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSpecialistPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpecialistPackage, other.SpecialistPackage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (specialistPackage_ != null) hash ^= SpecialistPackage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (specialistPackage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpecialistPackage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (specialistPackage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecialistPackage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSpecialistPackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.specialistPackage_ != null) {
        if (specialistPackage_ == null) {
          SpecialistPackage = new global::SubterfugeRemakeService.SpecialistPackage();
        }
        SpecialistPackage.MergeFrom(other.SpecialistPackage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (specialistPackage_ == null) {
              SpecialistPackage = new global::SubterfugeRemakeService.SpecialistPackage();
            }
            input.ReadMessage(SpecialistPackage);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateSpecialistPackageResponse : pb::IMessage<CreateSpecialistPackageResponse> {
    private static readonly pb::MessageParser<CreateSpecialistPackageResponse> _parser = new pb::MessageParser<CreateSpecialistPackageResponse>(() => new CreateSpecialistPackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSpecialistPackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageResponse(CreateSpecialistPackageResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      specialistPackageId_ = other.specialistPackageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSpecialistPackageResponse Clone() {
      return new CreateSpecialistPackageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "SpecialistPackageId" field.</summary>
    public const int SpecialistPackageIdFieldNumber = 2;
    private string specialistPackageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialistPackageId {
      get { return specialistPackageId_; }
      set {
        specialistPackageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSpecialistPackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSpecialistPackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (SpecialistPackageId != other.SpecialistPackageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (SpecialistPackageId.Length != 0) hash ^= SpecialistPackageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (SpecialistPackageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SpecialistPackageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (SpecialistPackageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialistPackageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSpecialistPackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.SpecialistPackageId.Length != 0) {
        SpecialistPackageId = other.SpecialistPackageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            SpecialistPackageId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSpecialistPackagesRequest : pb::IMessage<GetSpecialistPackagesRequest> {
    private static readonly pb::MessageParser<GetSpecialistPackagesRequest> _parser = new pb::MessageParser<GetSpecialistPackagesRequest>(() => new GetSpecialistPackagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSpecialistPackagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesRequest(GetSpecialistPackagesRequest other) : this() {
      pageNumber_ = other.pageNumber_;
      searchTerm_ = other.searchTerm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesRequest Clone() {
      return new GetSpecialistPackagesRequest(this);
    }

    /// <summary>Field number for the "pageNumber" field.</summary>
    public const int PageNumberFieldNumber = 1;
    private long pageNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    /// <summary>Field number for the "searchTerm" field.</summary>
    public const int SearchTermFieldNumber = 2;
    private string searchTerm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchTerm {
      get { return searchTerm_; }
      set {
        searchTerm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSpecialistPackagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSpecialistPackagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageNumber != other.PageNumber) return false;
      if (SearchTerm != other.SearchTerm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageNumber != 0L) hash ^= PageNumber.GetHashCode();
      if (SearchTerm.Length != 0) hash ^= SearchTerm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PageNumber);
      }
      if (SearchTerm.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SearchTerm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageNumber);
      }
      if (SearchTerm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTerm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSpecialistPackagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageNumber != 0L) {
        PageNumber = other.PageNumber;
      }
      if (other.SearchTerm.Length != 0) {
        SearchTerm = other.SearchTerm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PageNumber = input.ReadInt64();
            break;
          }
          case 18: {
            SearchTerm = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSpecialistPackagesResponse : pb::IMessage<GetSpecialistPackagesResponse> {
    private static readonly pb::MessageParser<GetSpecialistPackagesResponse> _parser = new pb::MessageParser<GetSpecialistPackagesResponse>(() => new GetSpecialistPackagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSpecialistPackagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesResponse(GetSpecialistPackagesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      specialistPackages_ = other.specialistPackages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSpecialistPackagesResponse Clone() {
      return new GetSpecialistPackagesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "SpecialistPackages" field.</summary>
    public const int SpecialistPackagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistPackage> _repeated_specialistPackages_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.SpecialistPackage.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage> specialistPackages_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage> SpecialistPackages {
      get { return specialistPackages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSpecialistPackagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSpecialistPackagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!specialistPackages_.Equals(other.specialistPackages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= specialistPackages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      specialistPackages_.WriteTo(output, _repeated_specialistPackages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += specialistPackages_.CalculateSize(_repeated_specialistPackages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSpecialistPackagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      specialistPackages_.Add(other.specialistPackages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            specialistPackages_.AddEntriesFrom(input, _repeated_specialistPackages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayerCustomSpecialistsRequest : pb::IMessage<GetPlayerCustomSpecialistsRequest> {
    private static readonly pb::MessageParser<GetPlayerCustomSpecialistsRequest> _parser = new pb::MessageParser<GetPlayerCustomSpecialistsRequest>(() => new GetPlayerCustomSpecialistsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerCustomSpecialistsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsRequest(GetPlayerCustomSpecialistsRequest other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsRequest Clone() {
      return new GetPlayerCustomSpecialistsRequest(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerCustomSpecialistsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerCustomSpecialistsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerCustomSpecialistsRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayerCustomSpecialistsResponse : pb::IMessage<GetPlayerCustomSpecialistsResponse> {
    private static readonly pb::MessageParser<GetPlayerCustomSpecialistsResponse> _parser = new pb::MessageParser<GetPlayerCustomSpecialistsResponse>(() => new GetPlayerCustomSpecialistsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerCustomSpecialistsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsResponse(GetPlayerCustomSpecialistsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      playerSpecialists_ = other.playerSpecialists_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerCustomSpecialistsResponse Clone() {
      return new GetPlayerCustomSpecialistsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "PlayerSpecialists" field.</summary>
    public const int PlayerSpecialistsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistConfiguration> _repeated_playerSpecialists_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.SpecialistConfiguration.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> playerSpecialists_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> PlayerSpecialists {
      get { return playerSpecialists_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerCustomSpecialistsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerCustomSpecialistsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!playerSpecialists_.Equals(other.playerSpecialists_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= playerSpecialists_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      playerSpecialists_.WriteTo(output, _repeated_playerSpecialists_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += playerSpecialists_.CalculateSize(_repeated_playerSpecialists_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerCustomSpecialistsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      playerSpecialists_.Add(other.playerSpecialists_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            playerSpecialists_.AddEntriesFrom(input, _repeated_playerSpecialists_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayerSpecialistPackagesRequest : pb::IMessage<GetPlayerSpecialistPackagesRequest> {
    private static readonly pb::MessageParser<GetPlayerSpecialistPackagesRequest> _parser = new pb::MessageParser<GetPlayerSpecialistPackagesRequest>(() => new GetPlayerSpecialistPackagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerSpecialistPackagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesRequest(GetPlayerSpecialistPackagesRequest other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesRequest Clone() {
      return new GetPlayerSpecialistPackagesRequest(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerSpecialistPackagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerSpecialistPackagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerSpecialistPackagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayerSpecialistPackagesResponse : pb::IMessage<GetPlayerSpecialistPackagesResponse> {
    private static readonly pb::MessageParser<GetPlayerSpecialistPackagesResponse> _parser = new pb::MessageParser<GetPlayerSpecialistPackagesResponse>(() => new GetPlayerSpecialistPackagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerSpecialistPackagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesResponse(GetPlayerSpecialistPackagesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      playerPackages_ = other.playerPackages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSpecialistPackagesResponse Clone() {
      return new GetPlayerSpecialistPackagesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::SubterfugeRemakeService.ResponseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "PlayerPackages" field.</summary>
    public const int PlayerPackagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistPackage> _repeated_playerPackages_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.SpecialistPackage.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage> playerPackages_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistPackage> PlayerPackages {
      get { return playerPackages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerSpecialistPackagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerSpecialistPackagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!playerPackages_.Equals(other.playerPackages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= playerPackages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      playerPackages_.WriteTo(output, _repeated_playerPackages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += playerPackages_.CalculateSize(_repeated_playerPackages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerSpecialistPackagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::SubterfugeRemakeService.ResponseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      playerPackages_.Add(other.playerPackages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::SubterfugeRemakeService.ResponseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            playerPackages_.AddEntriesFrom(input, _repeated_playerPackages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserModel : pb::IMessage<UserModel> {
    private static readonly pb::MessageParser<UserModel> _parser = new pb::MessageParser<UserModel>(() => new UserModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel(UserModel other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      passwordHash_ = other.passwordHash_;
      email_ = other.email_;
      deviceIdentifier_ = other.deviceIdentifier_;
      emailVerified_ = other.emailVerified_;
      claims_ = other.claims_.Clone();
      pushNotificationIdentifier_ = other.pushNotificationIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel Clone() {
      return new UserModel(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PasswordHash" field.</summary>
    public const int PasswordHashFieldNumber = 3;
    private string passwordHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PasswordHash {
      get { return passwordHash_; }
      set {
        passwordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceIdentifier" field.</summary>
    public const int DeviceIdentifierFieldNumber = 5;
    private string deviceIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceIdentifier {
      get { return deviceIdentifier_; }
      set {
        deviceIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emailVerified" field.</summary>
    public const int EmailVerifiedFieldNumber = 6;
    private bool emailVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailVerified {
      get { return emailVerified_; }
      set {
        emailVerified_ = value;
      }
    }

    /// <summary>Field number for the "claims" field.</summary>
    public const int ClaimsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.UserClaim> _repeated_claims_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::SubterfugeRemakeService.UserClaim) x);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.UserClaim> claims_ = new pbc::RepeatedField<global::SubterfugeRemakeService.UserClaim>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.UserClaim> Claims {
      get { return claims_; }
    }

    /// <summary>Field number for the "pushNotificationIdentifier" field.</summary>
    public const int PushNotificationIdentifierFieldNumber = 8;
    private string pushNotificationIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushNotificationIdentifier {
      get { return pushNotificationIdentifier_; }
      set {
        pushNotificationIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (PasswordHash != other.PasswordHash) return false;
      if (Email != other.Email) return false;
      if (DeviceIdentifier != other.DeviceIdentifier) return false;
      if (EmailVerified != other.EmailVerified) return false;
      if(!claims_.Equals(other.claims_)) return false;
      if (PushNotificationIdentifier != other.PushNotificationIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (PasswordHash.Length != 0) hash ^= PasswordHash.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (DeviceIdentifier.Length != 0) hash ^= DeviceIdentifier.GetHashCode();
      if (EmailVerified != false) hash ^= EmailVerified.GetHashCode();
      hash ^= claims_.GetHashCode();
      if (PushNotificationIdentifier.Length != 0) hash ^= PushNotificationIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (PasswordHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PasswordHash);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (DeviceIdentifier.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceIdentifier);
      }
      if (EmailVerified != false) {
        output.WriteRawTag(48);
        output.WriteBool(EmailVerified);
      }
      claims_.WriteTo(output, _repeated_claims_codec);
      if (PushNotificationIdentifier.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PushNotificationIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (PasswordHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PasswordHash);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (DeviceIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdentifier);
      }
      if (EmailVerified != false) {
        size += 1 + 1;
      }
      size += claims_.CalculateSize(_repeated_claims_codec);
      if (PushNotificationIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PushNotificationIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserModel other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.PasswordHash.Length != 0) {
        PasswordHash = other.PasswordHash;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.DeviceIdentifier.Length != 0) {
        DeviceIdentifier = other.DeviceIdentifier;
      }
      if (other.EmailVerified != false) {
        EmailVerified = other.EmailVerified;
      }
      claims_.Add(other.claims_);
      if (other.PushNotificationIdentifier.Length != 0) {
        PushNotificationIdentifier = other.PushNotificationIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            PasswordHash = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            DeviceIdentifier = input.ReadString();
            break;
          }
          case 48: {
            EmailVerified = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            claims_.AddEntriesFrom(input, _repeated_claims_codec);
            break;
          }
          case 66: {
            PushNotificationIdentifier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomModel : pb::IMessage<RoomModel> {
    private static readonly pb::MessageParser<RoomModel> _parser = new pb::MessageParser<RoomModel>(() => new RoomModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomModel(RoomModel other) : this() {
      roomId_ = other.roomId_;
      roomStatus_ = other.roomStatus_;
      creatorId_ = other.creatorId_;
      rankedInformation_ = other.rankedInformation_ != null ? other.rankedInformation_.Clone() : null;
      anonymous_ = other.anonymous_;
      roomName_ = other.roomName_;
      goal_ = other.goal_;
      seed_ = other.seed_;
      unixTimeCreated_ = other.unixTimeCreated_;
      unixTimeStarted_ = other.unixTimeStarted_;
      maxPlayers_ = other.maxPlayers_;
      allowedSpecialists_ = other.allowedSpecialists_.Clone();
      minutesPerTick_ = other.minutesPerTick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomModel Clone() {
      return new RoomModel(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomStatus" field.</summary>
    public const int RoomStatusFieldNumber = 2;
    private global::SubterfugeRemakeService.RoomStatus roomStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "creatorId" field.</summary>
    public const int CreatorIdFieldNumber = 3;
    private string creatorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatorId {
      get { return creatorId_; }
      set {
        creatorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RankedInformation" field.</summary>
    public const int RankedInformationFieldNumber = 4;
    private global::SubterfugeRemakeService.RankedInformation rankedInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.RankedInformation RankedInformation {
      get { return rankedInformation_; }
      set {
        rankedInformation_ = value;
      }
    }

    /// <summary>Field number for the "Anonymous" field.</summary>
    public const int AnonymousFieldNumber = 5;
    private bool anonymous_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Anonymous {
      get { return anonymous_; }
      set {
        anonymous_ = value;
      }
    }

    /// <summary>Field number for the "RoomName" field.</summary>
    public const int RoomNameFieldNumber = 6;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Goal" field.</summary>
    public const int GoalFieldNumber = 7;
    private global::SubterfugeRemakeService.Goal goal_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.Goal Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "Seed" field.</summary>
    public const int SeedFieldNumber = 8;
    private int seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "UnixTimeCreated" field.</summary>
    public const int UnixTimeCreatedFieldNumber = 9;
    private long unixTimeCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeCreated {
      get { return unixTimeCreated_; }
      set {
        unixTimeCreated_ = value;
      }
    }

    /// <summary>Field number for the "UnixTimeStarted" field.</summary>
    public const int UnixTimeStartedFieldNumber = 10;
    private long unixTimeStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeStarted {
      get { return unixTimeStarted_; }
      set {
        unixTimeStarted_ = value;
      }
    }

    /// <summary>Field number for the "MaxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 11;
    private long maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "allowedSpecialists" field.</summary>
    public const int AllowedSpecialistsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_allowedSpecialists_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> allowedSpecialists_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowedSpecialists {
      get { return allowedSpecialists_; }
    }

    /// <summary>Field number for the "MinutesPerTick" field.</summary>
    public const int MinutesPerTickFieldNumber = 13;
    private double minutesPerTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinutesPerTick {
      get { return minutesPerTick_; }
      set {
        minutesPerTick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (RoomStatus != other.RoomStatus) return false;
      if (CreatorId != other.CreatorId) return false;
      if (!object.Equals(RankedInformation, other.RankedInformation)) return false;
      if (Anonymous != other.Anonymous) return false;
      if (RoomName != other.RoomName) return false;
      if (Goal != other.Goal) return false;
      if (Seed != other.Seed) return false;
      if (UnixTimeCreated != other.UnixTimeCreated) return false;
      if (UnixTimeStarted != other.UnixTimeStarted) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if(!allowedSpecialists_.Equals(other.allowedSpecialists_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinutesPerTick, other.MinutesPerTick)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (RoomStatus != 0) hash ^= RoomStatus.GetHashCode();
      if (CreatorId.Length != 0) hash ^= CreatorId.GetHashCode();
      if (rankedInformation_ != null) hash ^= RankedInformation.GetHashCode();
      if (Anonymous != false) hash ^= Anonymous.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (Goal != 0) hash ^= Goal.GetHashCode();
      if (Seed != 0) hash ^= Seed.GetHashCode();
      if (UnixTimeCreated != 0L) hash ^= UnixTimeCreated.GetHashCode();
      if (UnixTimeStarted != 0L) hash ^= UnixTimeStarted.GetHashCode();
      if (MaxPlayers != 0L) hash ^= MaxPlayers.GetHashCode();
      hash ^= allowedSpecialists_.GetHashCode();
      if (MinutesPerTick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinutesPerTick);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomId);
      }
      if (RoomStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomStatus);
      }
      if (CreatorId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatorId);
      }
      if (rankedInformation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RankedInformation);
      }
      if (Anonymous != false) {
        output.WriteRawTag(40);
        output.WriteBool(Anonymous);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (Goal != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Goal);
      }
      if (Seed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Seed);
      }
      if (UnixTimeCreated != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(UnixTimeCreated);
      }
      if (UnixTimeStarted != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(UnixTimeStarted);
      }
      if (MaxPlayers != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaxPlayers);
      }
      allowedSpecialists_.WriteTo(output, _repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MinutesPerTick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (RoomStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomStatus);
      }
      if (CreatorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatorId);
      }
      if (rankedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RankedInformation);
      }
      if (Anonymous != false) {
        size += 1 + 1;
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Goal);
      }
      if (Seed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
      }
      if (UnixTimeCreated != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeCreated);
      }
      if (UnixTimeStarted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeStarted);
      }
      if (MaxPlayers != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPlayers);
      }
      size += allowedSpecialists_.CalculateSize(_repeated_allowedSpecialists_codec);
      if (MinutesPerTick != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomModel other) {
      if (other == null) {
        return;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.RoomStatus != 0) {
        RoomStatus = other.RoomStatus;
      }
      if (other.CreatorId.Length != 0) {
        CreatorId = other.CreatorId;
      }
      if (other.rankedInformation_ != null) {
        if (rankedInformation_ == null) {
          RankedInformation = new global::SubterfugeRemakeService.RankedInformation();
        }
        RankedInformation.MergeFrom(other.RankedInformation);
      }
      if (other.Anonymous != false) {
        Anonymous = other.Anonymous;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      if (other.Seed != 0) {
        Seed = other.Seed;
      }
      if (other.UnixTimeCreated != 0L) {
        UnixTimeCreated = other.UnixTimeCreated;
      }
      if (other.UnixTimeStarted != 0L) {
        UnixTimeStarted = other.UnixTimeStarted;
      }
      if (other.MaxPlayers != 0L) {
        MaxPlayers = other.MaxPlayers;
      }
      allowedSpecialists_.Add(other.allowedSpecialists_);
      if (other.MinutesPerTick != 0D) {
        MinutesPerTick = other.MinutesPerTick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomId = input.ReadString();
            break;
          }
          case 16: {
            RoomStatus = (global::SubterfugeRemakeService.RoomStatus) input.ReadEnum();
            break;
          }
          case 26: {
            CreatorId = input.ReadString();
            break;
          }
          case 34: {
            if (rankedInformation_ == null) {
              RankedInformation = new global::SubterfugeRemakeService.RankedInformation();
            }
            input.ReadMessage(RankedInformation);
            break;
          }
          case 40: {
            Anonymous = input.ReadBool();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 56: {
            Goal = (global::SubterfugeRemakeService.Goal) input.ReadEnum();
            break;
          }
          case 64: {
            Seed = input.ReadInt32();
            break;
          }
          case 72: {
            UnixTimeCreated = input.ReadInt64();
            break;
          }
          case 80: {
            UnixTimeStarted = input.ReadInt64();
            break;
          }
          case 88: {
            MaxPlayers = input.ReadInt64();
            break;
          }
          case 98: {
            allowedSpecialists_.AddEntriesFrom(input, _repeated_allowedSpecialists_codec);
            break;
          }
          case 105: {
            MinutesPerTick = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameEventModel : pb::IMessage<GameEventModel> {
    private static readonly pb::MessageParser<GameEventModel> _parser = new pb::MessageParser<GameEventModel>(() => new GameEventModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameEventModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventModel(GameEventModel other) : this() {
      eventId_ = other.eventId_;
      unixTimeIssued_ = other.unixTimeIssued_;
      occursAtTick_ = other.occursAtTick_;
      issuedBy_ = other.issuedBy_;
      eventData_ = other.eventData_;
      eventType_ = other.eventType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEventModel Clone() {
      return new GameEventModel(this);
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnixTimeIssued" field.</summary>
    public const int UnixTimeIssuedFieldNumber = 2;
    private long unixTimeIssued_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeIssued {
      get { return unixTimeIssued_; }
      set {
        unixTimeIssued_ = value;
      }
    }

    /// <summary>Field number for the "OccursAtTick" field.</summary>
    public const int OccursAtTickFieldNumber = 3;
    private int occursAtTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OccursAtTick {
      get { return occursAtTick_; }
      set {
        occursAtTick_ = value;
      }
    }

    /// <summary>Field number for the "IssuedBy" field.</summary>
    public const int IssuedByFieldNumber = 4;
    private string issuedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IssuedBy {
      get { return issuedBy_; }
      set {
        issuedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventData" field.</summary>
    public const int EventDataFieldNumber = 5;
    private pb::ByteString eventData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EventData {
      get { return eventData_; }
      set {
        eventData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 6;
    private global::SubterfugeRemakeService.EventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameEventModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameEventModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (UnixTimeIssued != other.UnixTimeIssued) return false;
      if (OccursAtTick != other.OccursAtTick) return false;
      if (IssuedBy != other.IssuedBy) return false;
      if (EventData != other.EventData) return false;
      if (EventType != other.EventType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (UnixTimeIssued != 0L) hash ^= UnixTimeIssued.GetHashCode();
      if (OccursAtTick != 0) hash ^= OccursAtTick.GetHashCode();
      if (IssuedBy.Length != 0) hash ^= IssuedBy.GetHashCode();
      if (EventData.Length != 0) hash ^= EventData.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (UnixTimeIssued != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnixTimeIssued);
      }
      if (OccursAtTick != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OccursAtTick);
      }
      if (IssuedBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IssuedBy);
      }
      if (EventData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EventData);
      }
      if (EventType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EventType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (UnixTimeIssued != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeIssued);
      }
      if (OccursAtTick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OccursAtTick);
      }
      if (IssuedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IssuedBy);
      }
      if (EventData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EventData);
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameEventModel other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.UnixTimeIssued != 0L) {
        UnixTimeIssued = other.UnixTimeIssued;
      }
      if (other.OccursAtTick != 0) {
        OccursAtTick = other.OccursAtTick;
      }
      if (other.IssuedBy.Length != 0) {
        IssuedBy = other.IssuedBy;
      }
      if (other.EventData.Length != 0) {
        EventData = other.EventData;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 16: {
            UnixTimeIssued = input.ReadInt64();
            break;
          }
          case 24: {
            OccursAtTick = input.ReadInt32();
            break;
          }
          case 34: {
            IssuedBy = input.ReadString();
            break;
          }
          case 42: {
            EventData = input.ReadBytes();
            break;
          }
          case 48: {
            EventType = (global::SubterfugeRemakeService.EventType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupModel : pb::IMessage<GroupModel> {
    private static readonly pb::MessageParser<GroupModel> _parser = new pb::MessageParser<GroupModel>(() => new GroupModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupModel(GroupModel other) : this() {
      groupId_ = other.groupId_;
      groupMembers_ = other.groupMembers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupModel Clone() {
      return new GroupModel(this);
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupMembers" field.</summary>
    public const int GroupMembersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.User> _repeated_groupMembers_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.User.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.User> groupMembers_ = new pbc::RepeatedField<global::SubterfugeRemakeService.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.User> GroupMembers {
      get { return groupMembers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if(!groupMembers_.Equals(other.groupMembers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= groupMembers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      groupMembers_.WriteTo(output, _repeated_groupMembers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      size += groupMembers_.CalculateSize(_repeated_groupMembers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupModel other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      groupMembers_.Add(other.groupMembers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            groupMembers_.AddEntriesFrom(input, _repeated_groupMembers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageModel : pb::IMessage<MessageModel> {
    private static readonly pb::MessageParser<MessageModel> _parser = new pb::MessageParser<MessageModel>(() => new MessageModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageModel(MessageModel other) : this() {
      unixTimeCreatedAt_ = other.unixTimeCreatedAt_;
      senderId_ = other.senderId_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageModel Clone() {
      return new MessageModel(this);
    }

    /// <summary>Field number for the "UnixTimeCreatedAt" field.</summary>
    public const int UnixTimeCreatedAtFieldNumber = 1;
    private long unixTimeCreatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTimeCreatedAt {
      get { return unixTimeCreatedAt_; }
      set {
        unixTimeCreatedAt_ = value;
      }
    }

    /// <summary>Field number for the "SenderId" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private string senderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnixTimeCreatedAt != other.UnixTimeCreatedAt) return false;
      if (SenderId != other.SenderId) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnixTimeCreatedAt != 0L) hash ^= UnixTimeCreatedAt.GetHashCode();
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnixTimeCreatedAt != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnixTimeCreatedAt);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnixTimeCreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTimeCreatedAt);
      }
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageModel other) {
      if (other == null) {
        return;
      }
      if (other.UnixTimeCreatedAt != 0L) {
        UnixTimeCreatedAt = other.UnixTimeCreatedAt;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnixTimeCreatedAt = input.ReadInt64();
            break;
          }
          case 18: {
            SenderId = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecialistConfiguration : pb::IMessage<SpecialistConfiguration> {
    private static readonly pb::MessageParser<SpecialistConfiguration> _parser = new pb::MessageParser<SpecialistConfiguration>(() => new SpecialistConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialistConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistConfiguration(SpecialistConfiguration other) : this() {
      specialistId_ = other.specialistId_;
      priority_ = other.priority_;
      specialistName_ = other.specialistName_;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      specialistEffects_ = other.specialistEffects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistConfiguration Clone() {
      return new SpecialistConfiguration(this);
    }

    /// <summary>Field number for the "SpecialistId" field.</summary>
    public const int SpecialistIdFieldNumber = 1;
    private string specialistId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialistId {
      get { return specialistId_; }
      set {
        specialistId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 2;
    private long priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "SpecialistName" field.</summary>
    public const int SpecialistNameFieldNumber = 3;
    private string specialistName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialistName {
      get { return specialistName_; }
      set {
        specialistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Creator" field.</summary>
    public const int CreatorFieldNumber = 4;
    private global::SubterfugeRemakeService.User creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.User Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "specialistEffects" field.</summary>
    public const int SpecialistEffectsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistEffectConfiguration> _repeated_specialistEffects_codec
        = pb::FieldCodec.ForMessage(42, global::SubterfugeRemakeService.SpecialistEffectConfiguration.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistEffectConfiguration> specialistEffects_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistEffectConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistEffectConfiguration> SpecialistEffects {
      get { return specialistEffects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialistConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialistConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpecialistId != other.SpecialistId) return false;
      if (Priority != other.Priority) return false;
      if (SpecialistName != other.SpecialistName) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if(!specialistEffects_.Equals(other.specialistEffects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SpecialistId.Length != 0) hash ^= SpecialistId.GetHashCode();
      if (Priority != 0L) hash ^= Priority.GetHashCode();
      if (SpecialistName.Length != 0) hash ^= SpecialistName.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      hash ^= specialistEffects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SpecialistId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SpecialistId);
      }
      if (Priority != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Priority);
      }
      if (SpecialistName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SpecialistName);
      }
      if (creator_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Creator);
      }
      specialistEffects_.WriteTo(output, _repeated_specialistEffects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SpecialistId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialistId);
      }
      if (Priority != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Priority);
      }
      if (SpecialistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialistName);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      size += specialistEffects_.CalculateSize(_repeated_specialistEffects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialistConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.SpecialistId.Length != 0) {
        SpecialistId = other.SpecialistId;
      }
      if (other.Priority != 0L) {
        Priority = other.Priority;
      }
      if (other.SpecialistName.Length != 0) {
        SpecialistName = other.SpecialistName;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::SubterfugeRemakeService.User();
        }
        Creator.MergeFrom(other.Creator);
      }
      specialistEffects_.Add(other.specialistEffects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SpecialistId = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt64();
            break;
          }
          case 26: {
            SpecialistName = input.ReadString();
            break;
          }
          case 34: {
            if (creator_ == null) {
              Creator = new global::SubterfugeRemakeService.User();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 42: {
            specialistEffects_.AddEntriesFrom(input, _repeated_specialistEffects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecialistEffectConfiguration : pb::IMessage<SpecialistEffectConfiguration> {
    private static readonly pb::MessageParser<SpecialistEffectConfiguration> _parser = new pb::MessageParser<SpecialistEffectConfiguration>(() => new SpecialistEffectConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialistEffectConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectConfiguration(SpecialistEffectConfiguration other) : this() {
      value_ = other.value_;
      effectTrigger_ = other.effectTrigger_;
      effectTarget_ = other.effectTarget_;
      effectTriggerRange_ = other.effectTriggerRange_;
      effectModifier_ = other.effectModifier_;
      effectScale_ = other.effectScale_ != null ? other.effectScale_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectConfiguration Clone() {
      return new SpecialistEffectConfiguration(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "EffectTrigger" field.</summary>
    public const int EffectTriggerFieldNumber = 2;
    private global::SubterfugeRemakeService.EffectTrigger effectTrigger_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectTrigger EffectTrigger {
      get { return effectTrigger_; }
      set {
        effectTrigger_ = value;
      }
    }

    /// <summary>Field number for the "EffectTarget" field.</summary>
    public const int EffectTargetFieldNumber = 3;
    private global::SubterfugeRemakeService.EffectTarget effectTarget_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectTarget EffectTarget {
      get { return effectTarget_; }
      set {
        effectTarget_ = value;
      }
    }

    /// <summary>Field number for the "EffectTriggerRange" field.</summary>
    public const int EffectTriggerRangeFieldNumber = 4;
    private global::SubterfugeRemakeService.EffectTriggerRange effectTriggerRange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectTriggerRange EffectTriggerRange {
      get { return effectTriggerRange_; }
      set {
        effectTriggerRange_ = value;
      }
    }

    /// <summary>Field number for the "EffectModifier" field.</summary>
    public const int EffectModifierFieldNumber = 5;
    private global::SubterfugeRemakeService.EffectModifier effectModifier_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectModifier EffectModifier {
      get { return effectModifier_; }
      set {
        effectModifier_ = value;
      }
    }

    /// <summary>Field number for the "EffectScale" field.</summary>
    public const int EffectScaleFieldNumber = 6;
    private global::SubterfugeRemakeService.SpecialistEffectScale effectScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.SpecialistEffectScale EffectScale {
      get { return effectScale_; }
      set {
        effectScale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialistEffectConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialistEffectConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (EffectTrigger != other.EffectTrigger) return false;
      if (EffectTarget != other.EffectTarget) return false;
      if (EffectTriggerRange != other.EffectTriggerRange) return false;
      if (EffectModifier != other.EffectModifier) return false;
      if (!object.Equals(EffectScale, other.EffectScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (EffectTrigger != 0) hash ^= EffectTrigger.GetHashCode();
      if (EffectTarget != 0) hash ^= EffectTarget.GetHashCode();
      if (EffectTriggerRange != 0) hash ^= EffectTriggerRange.GetHashCode();
      if (EffectModifier != 0) hash ^= EffectModifier.GetHashCode();
      if (effectScale_ != null) hash ^= EffectScale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Value);
      }
      if (EffectTrigger != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EffectTrigger);
      }
      if (EffectTarget != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EffectTarget);
      }
      if (EffectTriggerRange != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EffectTriggerRange);
      }
      if (EffectModifier != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EffectModifier);
      }
      if (effectScale_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EffectScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (EffectTrigger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectTrigger);
      }
      if (EffectTarget != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectTarget);
      }
      if (EffectTriggerRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectTriggerRange);
      }
      if (EffectModifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectModifier);
      }
      if (effectScale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectScale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialistEffectConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.EffectTrigger != 0) {
        EffectTrigger = other.EffectTrigger;
      }
      if (other.EffectTarget != 0) {
        EffectTarget = other.EffectTarget;
      }
      if (other.EffectTriggerRange != 0) {
        EffectTriggerRange = other.EffectTriggerRange;
      }
      if (other.EffectModifier != 0) {
        EffectModifier = other.EffectModifier;
      }
      if (other.effectScale_ != null) {
        if (effectScale_ == null) {
          EffectScale = new global::SubterfugeRemakeService.SpecialistEffectScale();
        }
        EffectScale.MergeFrom(other.EffectScale);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt64();
            break;
          }
          case 16: {
            EffectTrigger = (global::SubterfugeRemakeService.EffectTrigger) input.ReadEnum();
            break;
          }
          case 24: {
            EffectTarget = (global::SubterfugeRemakeService.EffectTarget) input.ReadEnum();
            break;
          }
          case 32: {
            EffectTriggerRange = (global::SubterfugeRemakeService.EffectTriggerRange) input.ReadEnum();
            break;
          }
          case 40: {
            EffectModifier = (global::SubterfugeRemakeService.EffectModifier) input.ReadEnum();
            break;
          }
          case 50: {
            if (effectScale_ == null) {
              EffectScale = new global::SubterfugeRemakeService.SpecialistEffectScale();
            }
            input.ReadMessage(EffectScale);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecialistEffectScale : pb::IMessage<SpecialistEffectScale> {
    private static readonly pb::MessageParser<SpecialistEffectScale> _parser = new pb::MessageParser<SpecialistEffectScale>(() => new SpecialistEffectScale());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialistEffectScale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectScale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectScale(SpecialistEffectScale other) : this() {
      effectScale_ = other.effectScale_;
      effectScaleTarget_ = other.effectScaleTarget_;
      scaleTriggerRange_ = other.scaleTriggerRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistEffectScale Clone() {
      return new SpecialistEffectScale(this);
    }

    /// <summary>Field number for the "EffectScale" field.</summary>
    public const int EffectScaleFieldNumber = 6;
    private global::SubterfugeRemakeService.EffectScale effectScale_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectScale EffectScale {
      get { return effectScale_; }
      set {
        effectScale_ = value;
      }
    }

    /// <summary>Field number for the "EffectScaleTarget" field.</summary>
    public const int EffectScaleTargetFieldNumber = 7;
    private global::SubterfugeRemakeService.EffectTarget effectScaleTarget_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectTarget EffectScaleTarget {
      get { return effectScaleTarget_; }
      set {
        effectScaleTarget_ = value;
      }
    }

    /// <summary>Field number for the "ScaleTriggerRange" field.</summary>
    public const int ScaleTriggerRangeFieldNumber = 8;
    private global::SubterfugeRemakeService.EffectTriggerRange scaleTriggerRange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.EffectTriggerRange ScaleTriggerRange {
      get { return scaleTriggerRange_; }
      set {
        scaleTriggerRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialistEffectScale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialistEffectScale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectScale != other.EffectScale) return false;
      if (EffectScaleTarget != other.EffectScaleTarget) return false;
      if (ScaleTriggerRange != other.ScaleTriggerRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectScale != 0) hash ^= EffectScale.GetHashCode();
      if (EffectScaleTarget != 0) hash ^= EffectScaleTarget.GetHashCode();
      if (ScaleTriggerRange != 0) hash ^= ScaleTriggerRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EffectScale != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EffectScale);
      }
      if (EffectScaleTarget != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) EffectScaleTarget);
      }
      if (ScaleTriggerRange != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ScaleTriggerRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EffectScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectScale);
      }
      if (EffectScaleTarget != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectScaleTarget);
      }
      if (ScaleTriggerRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScaleTriggerRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialistEffectScale other) {
      if (other == null) {
        return;
      }
      if (other.EffectScale != 0) {
        EffectScale = other.EffectScale;
      }
      if (other.EffectScaleTarget != 0) {
        EffectScaleTarget = other.EffectScaleTarget;
      }
      if (other.ScaleTriggerRange != 0) {
        ScaleTriggerRange = other.ScaleTriggerRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 48: {
            EffectScale = (global::SubterfugeRemakeService.EffectScale) input.ReadEnum();
            break;
          }
          case 56: {
            EffectScaleTarget = (global::SubterfugeRemakeService.EffectTarget) input.ReadEnum();
            break;
          }
          case 64: {
            ScaleTriggerRange = (global::SubterfugeRemakeService.EffectTriggerRange) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecialistPackage : pb::IMessage<SpecialistPackage> {
    private static readonly pb::MessageParser<SpecialistPackage> _parser = new pb::MessageParser<SpecialistPackage>(() => new SpecialistPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialistPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackage(SpecialistPackage other) : this() {
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      packageName_ = other.packageName_;
      specialistPackageId_ = other.specialistPackageId_;
      specialistIds_ = other.specialistIds_.Clone();
      specialistPackageIds_ = other.specialistPackageIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackage Clone() {
      return new SpecialistPackage(this);
    }

    /// <summary>Field number for the "Creator" field.</summary>
    public const int CreatorFieldNumber = 1;
    private global::SubterfugeRemakeService.User creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubterfugeRemakeService.User Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "PackageName" field.</summary>
    public const int PackageNameFieldNumber = 2;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SpecialistPackageId" field.</summary>
    public const int SpecialistPackageIdFieldNumber = 3;
    private string specialistPackageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialistPackageId {
      get { return specialistPackageId_; }
      set {
        specialistPackageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specialistIds" field.</summary>
    public const int SpecialistIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_specialistIds_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> specialistIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SpecialistIds {
      get { return specialistIds_; }
    }

    /// <summary>Field number for the "SpecialistPackageIds" field.</summary>
    public const int SpecialistPackageIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_specialistPackageIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> specialistPackageIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SpecialistPackageIds {
      get { return specialistPackageIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialistPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialistPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Creator, other.Creator)) return false;
      if (PackageName != other.PackageName) return false;
      if (SpecialistPackageId != other.SpecialistPackageId) return false;
      if(!specialistIds_.Equals(other.specialistIds_)) return false;
      if(!specialistPackageIds_.Equals(other.specialistPackageIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (SpecialistPackageId.Length != 0) hash ^= SpecialistPackageId.GetHashCode();
      hash ^= specialistIds_.GetHashCode();
      hash ^= specialistPackageIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (creator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Creator);
      }
      if (PackageName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PackageName);
      }
      if (SpecialistPackageId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SpecialistPackageId);
      }
      specialistIds_.WriteTo(output, _repeated_specialistIds_codec);
      specialistPackageIds_.WriteTo(output, _repeated_specialistPackageIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (SpecialistPackageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialistPackageId);
      }
      size += specialistIds_.CalculateSize(_repeated_specialistIds_codec);
      size += specialistPackageIds_.CalculateSize(_repeated_specialistPackageIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialistPackage other) {
      if (other == null) {
        return;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::SubterfugeRemakeService.User();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.SpecialistPackageId.Length != 0) {
        SpecialistPackageId = other.SpecialistPackageId;
      }
      specialistIds_.Add(other.specialistIds_);
      specialistPackageIds_.Add(other.specialistPackageIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (creator_ == null) {
              Creator = new global::SubterfugeRemakeService.User();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 18: {
            PackageName = input.ReadString();
            break;
          }
          case 26: {
            SpecialistPackageId = input.ReadString();
            break;
          }
          case 34: {
            specialistIds_.AddEntriesFrom(input, _repeated_specialistIds_codec);
            break;
          }
          case 42: {
            specialistPackageIds_.AddEntriesFrom(input, _repeated_specialistPackageIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecialistPackageConfiguration : pb::IMessage<SpecialistPackageConfiguration> {
    private static readonly pb::MessageParser<SpecialistPackageConfiguration> _parser = new pb::MessageParser<SpecialistPackageConfiguration>(() => new SpecialistPackageConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialistPackageConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubterfugeRemakeService.SubterfugeRemakeReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackageConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackageConfiguration(SpecialistPackageConfiguration other) : this() {
      specialistConfigurations_ = other.specialistConfigurations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialistPackageConfiguration Clone() {
      return new SpecialistPackageConfiguration(this);
    }

    /// <summary>Field number for the "SpecialistConfigurations" field.</summary>
    public const int SpecialistConfigurationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubterfugeRemakeService.SpecialistConfiguration> _repeated_specialistConfigurations_codec
        = pb::FieldCodec.ForMessage(18, global::SubterfugeRemakeService.SpecialistConfiguration.Parser);
    private readonly pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> specialistConfigurations_ = new pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubterfugeRemakeService.SpecialistConfiguration> SpecialistConfigurations {
      get { return specialistConfigurations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialistPackageConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialistPackageConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!specialistConfigurations_.Equals(other.specialistConfigurations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= specialistConfigurations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      specialistConfigurations_.WriteTo(output, _repeated_specialistConfigurations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += specialistConfigurations_.CalculateSize(_repeated_specialistConfigurations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialistPackageConfiguration other) {
      if (other == null) {
        return;
      }
      specialistConfigurations_.Add(other.specialistConfigurations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            specialistConfigurations_.AddEntriesFrom(input, _repeated_specialistConfigurations_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
